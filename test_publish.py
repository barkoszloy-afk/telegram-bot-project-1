#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞ –≤ –∫–∞–Ω–∞–ª
"""
import os
import sys
from datetime import datetime
from dotenv import load_dotenv
import asyncio
from telegram import InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Application

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

BOT_TOKEN = os.getenv('BOT_TOKEN')
CHANNEL_ID = '-1002510932658'

# –≠–º–æ–¥–∑–∏ –∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π
REACTION_EMOJIS = ["‚ù§Ô∏è", "üôè", "ü•π"]
REACTION_NAMES = ["heart", "pray", "touched"]

# –ó–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞
ZODIAC_SIGNS = [
    ("–û–≤–µ–Ω", "üêè"), ("–¢–µ–ª–µ—Ü", "üêÇ"), ("–ë–ª–∏–∑–Ω–µ—Ü—ã", "üëØ‚Äç‚ôÇÔ∏è"), ("–†–∞–∫", "ü¶Ä"),
    ("–õ–µ–≤", "ü¶Å"), ("–î–µ–≤–∞", "üë∏"), ("–í–µ—Å—ã", "‚öñÔ∏è"), ("–°–∫–æ—Ä–ø–∏–æ–Ω", "ü¶Ç"),
    ("–°—Ç—Ä–µ–ª–µ—Ü", "üèπ"), ("–ö–æ–∑–µ—Ä–æ–≥", "üêê"), ("–í–æ–¥–æ–ª–µ–π", "üåä"), ("–†—ã–±—ã", "üêü")
]

def create_reaction_keyboard(post_id):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏"""
    reaction_buttons = []
    for i in range(3):
        emoji = REACTION_EMOJIS[i]
        name = REACTION_NAMES[i]
        button_text = f"{emoji} 0"
        reaction_buttons.append(InlineKeyboardButton(button_text, callback_data=f"react_{name}_{post_id}"))
    
    return [reaction_buttons]

def create_zodiac_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞"""
    keyboard = []
    for name, emoji in ZODIAC_SIGNS:
        button = InlineKeyboardButton(f"{emoji} {name}", callback_data=f"zodiac_{name}")
        keyboard.append([button])  # –ö–∞–∂–¥—ã–π –∑–Ω–∞–∫ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    return keyboard

async def publish_test_post():
    """–ü—É–±–ª–∏–∫—É–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —Å –≥–æ—Ä–æ—Å–∫–æ–ø–æ–º"""
    if not BOT_TOKEN:
        print("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
        
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –ø–æ—Å—Ç–∞
    post_id = f"test_horoscope_{datetime.now().strftime('%Y%m%d_%H%M%S')}"
    
    # –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –≥–æ—Ä–æ—Å–∫–æ–ø–∞
    image_path = os.path.expanduser("~/Desktop/images/–≥–æ—Ä–æ—Å–∫–æ–ø2–∞–≤–≥—É—Å—Ç–∞.jpg")
    
    try:
        # –°–æ–∑–¥–∞–µ–º Application
        application = Application.builder().token(BOT_TOKEN).build()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º bot
        await application.initialize()
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = create_zodiac_keyboard() + create_reaction_keyboard(post_id)
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –¢–µ–∫—Å—Ç –¥–ª—è –ø–æ—Å—Ç–∞
        caption = "üåü –¢–µ—Å—Ç–æ–≤–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞ –Ω–∞ 2 –∞–≤–≥—É—Å—Ç–∞! –£–∑–Ω–∞–π—Ç–µ, —á—Ç–æ –∑–≤–µ–∑–¥—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∏–º–µ–Ω–Ω–æ –¥–ª—è –≤–∞—à–µ–≥–æ –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞. –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –∑–Ω–∞–∫ –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ! ‚ú®"
        
        print(f"üì§ –ü—É–±–ª–∏–∫—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —Å ID: {post_id}")
        print(f"üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_path}")
        print(f"üìù –ü–æ–¥–ø–∏—Å—å: {caption[:50]}...")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        with open(image_path, 'rb') as photo:
            message = await application.bot.send_photo(
                chat_id=CHANNEL_ID,
                photo=photo,
                caption=caption,
                reply_markup=reply_markup
            )
        
        print(f"‚úÖ –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!")
        print(f"üìé ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ: {message.message_id}")
        print(f"üîó –ü–æ—Å—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç {len(ZODIAC_SIGNS)} –∫–Ω–æ–ø–æ–∫ –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞ –∏ 3 –∫–Ω–æ–ø–∫–∏ —Ä–µ–∞–∫—Ü–∏–π")
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º application
        await application.shutdown()
        return True
        
    except FileNotFoundError:
        print(f"‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: {image_path}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏...")
    
    if not BOT_TOKEN:
        print("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    success = await publish_test_post()
    
    if success:
        print("üéâ –¢–µ—Å—Ç–æ–≤–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("üí• –¢–µ—Å—Ç–æ–≤–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")

if __name__ == "__main__":
    asyncio.run(main())
