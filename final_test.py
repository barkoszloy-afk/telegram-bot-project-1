# final_test.py - –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã
import asyncio
import sys
import pytest
from telegram import Bot

@pytest.mark.asyncio
async def test_bot_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±–æ—Ç–∞"""
    try:
        from config import BOT_TOKEN, validate_config
    except Exception as e:
        pytest.skip(f"config –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")

    if not BOT_TOKEN:
        pytest.skip("BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    validate_config()

    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    bot = Bot(token=BOT_TOKEN)

    bot_info = await bot.get_me()
    assert bot_info is not None

    commands = await bot.get_my_commands()
    assert commands is not None

    webhook_info = await bot.get_webhook_info()
    assert webhook_info is not None

def test_all_modules():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–æ–¥—É–ª–∏"""
    modules = [
        ("config", "from config import BOT_TOKEN, ADMIN_ID, validate_config"),
        ("utils.keyboards", "from utils.keyboards import create_main_menu_keyboard"),
        ("utils.database", "from utils.database import reactions_db"),
        ("handlers.admin", "from handlers.admin import admin_command"),
        ("handlers.reactions", "from handlers.reactions import handle_reaction"),
        ("main_bot_railway", "import main_bot_railway"),
    ]

    success = 0
    total = len(modules)

    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–°–ï–• –ú–û–î–£–õ–ï–ô")
    print("=" * 50)

    for name, import_cmd in modules:
        try:
            exec(import_cmd)
            print(f"‚úÖ {name}: OK")
            success += 1
        except Exception as e:
            print(f"‚ùå {name}: FAILED - {e}")

    print(f"\nüìä –ú–æ–¥—É–ª–∏: {success}/{total}")
    assert success == total, "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥—É–ª–∏ –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è"

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´")
    print("=" * 60)
    test_all_modules()

    print("\nü§ñ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–û–¢–ê")
    print("=" * 30)
    await test_bot_functionality()

    print("\n" + "=" * 60)
    print("üéâ –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´")
    return 0

if __name__ == "__main__":
    exit_code = asyncio.run(main())
    sys.exit(exit_code)
