[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
strict_concatenate = true

# Исключаем файлы, которые не нужно проверять
exclude = [
    "test_.*\\.py$",
    ".*_backup\\.py$", 
    ".*_minimal\\.py$",
    ".*_refactored\\.py$",
    "simple_test\\.py$",
    "railway_test\\.py$",
    "register_commands\\.py$",
    "check_.*\\.py$",
    "utils/keyboards_.*\\.py$"
]

# Основные production файлы, которые должны быть полностью типизированы
[[tool.mypy.overrides]]
module = [
    "main_bot_railway",
    "config", 
    "handlers.admin",
    "handlers.reactions",
    "utils.database",
    "utils.keyboards",
    "utils.localization",
    "utils.exceptions"
]
disallow_untyped_defs = true
disallow_incomplete_defs = true

[project]
name = "telegram-bot-project"
version = "1.0.0"
description = "Modern Telegram Bot with motivation, astrology and wellness content"
authors = [{name = "Your Name", email = "your.email@example.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["telegram", "bot", "motivation", "astrology", "wellness"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "python-telegram-bot[webhooks]>=21.0",
    "flask>=3.0.0",
    "python-dotenv>=1.0.0",
    "aiofiles>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "mypy>=1.5.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pre-commit>=3.3.0",
]

[project.urls]
Homepage = "https://github.com/barkoszloy-afk/telegram-bot-project-1"
Repository = "https://github.com/barkoszloy-afk/telegram-bot-project-1"
Issues = "https://github.com/barkoszloy-afk/telegram-bot-project-1/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["handlers*", "utils*"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=handlers",
    "--cov=utils",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["handlers", "utils"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[[tool.mypy.overrides]]
module = "telegram.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "flask.*"
ignore_missing_imports = true

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".mypy_cache",
    ".pytest_cache",
]
