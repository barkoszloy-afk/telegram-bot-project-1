#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã /start
"""

import logging
import asyncio
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

from config import BOT_TOKEN
from utils.keyboards import create_main_menu_keyboard

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ /start"""
    user = update.effective_user
    print(f"üì® –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.first_name if user else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}")
    
    if not update.message:
        print("‚ùå update.message –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        return
        
    user_name = user.first_name if user else "–¥—Ä—É–≥"
    welcome_text = f"""
üåü –ü—Ä–∏–≤–µ—Ç, {user_name}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è! ‚ú®

üéØ **–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å —Ç–µ–º—É:**

üí´ **–ú–æ—Ç–∏–≤–∞—Ü–∏—è** - –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–µ –∏–¥–µ–∏ –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
üîÆ **–≠–∑–æ—Ç–µ—Ä–∏–∫–∞** - –≥–æ—Ä–æ—Å–∫–æ–ø—ã, –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—è –∏ –¥—É—Ö–æ–≤–Ω–æ—Å—Ç—å  
üéØ **–†–∞–∑–≤–∏—Ç–∏–µ** - –ª–∏—á–Ω–æ—Å—Ç–Ω—ã–π —Ä–æ—Å—Ç –∏ –æ–±—É—á–µ–Ω–∏–µ
üåü **–ó–¥–æ—Ä–æ–≤—å–µ** - –∑–∞–±–æ—Ç–∞ –æ —Ç–µ–ª–µ –∏ —Ä–∞–∑—É–º–µ
üíù **–û—Ç–Ω–æ—à–µ–Ω–∏—è** - –≥–∞—Ä–º–æ–Ω–∏—è –≤ –æ–±—â–µ–Ω–∏–∏ –∏ –ª—é–±–≤–∏

üëá –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:
"""
    
    try:
        keyboard = create_main_menu_keyboard()
        print(f"‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞: {len(keyboard.inline_keyboard)} —Ä—è–¥–æ–≤")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
        await update.message.reply_text(
            welcome_text, 
            reply_markup=keyboard
        )
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞...")
    
    if not BOT_TOKEN:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    application.add_handler(CommandHandler("start", start_command))
    
    print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
    print("üì± –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –±–æ—Ç—É –≤ Telegram")
    print("üõë –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    
    # –ó–∞–ø—É—Å–∫ polling
    application.run_polling(drop_pending_updates=True)

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
