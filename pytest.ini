[tool:pytest]
# pytest.ini - Конфигурация pytest

# Директории для поиска тестов (включаем корневую директорию)
testpaths = tests .

# Паттерны файлов с тестами
python_files = test_*.py *_test.py final_test.py

# Паттерны классов с тестами
python_classes = Test*

# Паттерны функций с тестами
python_functions = test_*

# Поддержка асинхронных тестов (strict mode для лучшей проверки)
asyncio_mode = strict

# Маркеры
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    benchmark: marks tests as benchmark tests
    security: marks tests as security tests
    asyncio: marks tests as asyncio tests

# Дополнительные опции
addopts =
    -v
    --tb=short
    --strict-markers
    --strict-config
    --color=yes
    --durations=10
    --cov=handlers
    --cov=utils
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=70

# Предупреждения
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:telegram

# Конфигурация coverage
[coverage:run]
source = handlers, utils
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
