#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞ –∏ –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ Telegram API
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from telegram import Bot
from config import BOT_TOKEN

async def check_bot_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ —á–µ—Ä–µ–∑ Telegram API"""
    print("ü§ñ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞...")
    
    if not BOT_TOKEN:
        print("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ config.py")
        return False
    
    try:
        from telegram.ext import Application
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        application = Application.builder().token(BOT_TOKEN).build()
        await application.initialize()
        
        bot = application.bot
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        me = await bot.get_me()
        print(f"‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @{me.username}")
        print(f"üìù –ò–º—è: {me.first_name}")
        print(f"üÜî ID: {me.id}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
        commands = await bot.get_my_commands()
        if commands:
            print(f"\nüìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
            for cmd in commands:
                print(f"   /{cmd.command} - {cmd.description}")
        else:
            print("\n‚ö†Ô∏è –ö–æ–º–∞–Ω–¥—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
        webhook_info = await bot.get_webhook_info()
        if webhook_info.url:
            print(f"\nüåê Webhook –∞–∫—Ç–∏–≤–µ–Ω: {webhook_info.url}")
            print(f"üìä Pending updates: {webhook_info.pending_update_count}")
        else:
            print(f"\nüì± Polling —Ä–µ–∂–∏–º (webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)")
            
        await application.shutdown()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–æ—Ç–∞: {e}")
        return False

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–æ—Ç–∞\n")
    
    success = await check_bot_status()
    
    if success:
        print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print(f"1. –ï—Å–ª–∏ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Railway - –∫–æ–º–∞–Ω–¥—ã –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–∞–º")
        print(f"2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å /help –ø—Ä—è–º–æ –≤ Telegram –±–æ—Ç–µ")
        print(f"3. –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ Railway")
        print(f"4. –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –∫–æ–º–∞–Ω–¥–æ–π /setcommands –≤ @BotFather")
    else:
        print(f"\n‚ùå –ë–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print(f"1. –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ –≤ config.py")
        print(f"2. –†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –±–æ—Ç –Ω–∞ Railway")
        print(f"3. –ù–µ—Ç –ª–∏ –ø—Ä–æ–±–ª–µ–º —Å —Å–µ—Ç—å—é")

if __name__ == "__main__":
    asyncio.run(main())
