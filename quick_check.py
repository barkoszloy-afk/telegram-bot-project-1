#!/usr/bin/env python3
# quick_check.py - –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–µ–∫—Ç–∞

import os
import sys

def quick_status():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–µ–∫—Ç–∞"""
    print("üöÄ –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê TELEGRAM –ë–û–¢–ê")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    essential_files = [
        ('main_bot_railway.py', '–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –±–æ—Ç–∞'),
        ('config.py', '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è'),
        ('requirements.txt', '–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏'),
        ('.env', '–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è'),
        ('Dockerfile', 'Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è'),
        ('Procfile', 'Procfile –¥–ª—è –¥–µ–ø–ª–æ—è')
    ]
    
    print("\nüìÅ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    missing_files = 0
    for file, description in essential_files:
        if os.path.exists(file):
            print(f"   ‚úÖ {file} - {description}")
        else:
            print(f"   ‚ùå {file} - {description} (–û–¢–°–£–¢–°–¢–í–£–ï–¢)")
            missing_files += 1
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    essential_dirs = [
        ('handlers', '–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥'),
        ('utils', '–£—Ç–∏–ª–∏—Ç—ã'),
        ('tests', '–¢–µ—Å—Ç—ã')
    ]
    
    print("\nüìÇ –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:")
    missing_dirs = 0
    for dir_name, description in essential_dirs:
        if os.path.exists(dir_name):
            print(f"   ‚úÖ {dir_name}/ - {description}")
        else:
            print(f"   ‚ùå {dir_name}/ - {description} (–û–¢–°–£–¢–°–¢–í–£–ï–¢)")
            missing_dirs += 1
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
    print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤:")
    import_success = 0
    total_imports = 0
    
    imports_to_check = [
        ('config', '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è'),
        ('utils.keyboards', '–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã'),
        ('handlers.admin', '–ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã')
    ]
    
    for module, description in imports_to_check:
        total_imports += 1
        try:
            __import__(module)
            print(f"   ‚úÖ {module} - {description}")
            import_success += 1
        except ImportError as e:
            print(f"   ‚ùå {module} - {description} (–û–®–ò–ë–ö–ê: {e})")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print("\n‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    config_issues = 0
    
    try:
        from config import BOT_TOKEN, ADMIN_ID
        
        if BOT_TOKEN:
            if 'TEST' in BOT_TOKEN:
                print("   ‚ö†Ô∏è BOT_TOKEN - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω")
            else:
                print("   ‚úÖ BOT_TOKEN - –ù–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            print("   ‚ùå BOT_TOKEN - –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            config_issues += 1
            
        if ADMIN_ID and ADMIN_ID > 0:
            print("   ‚úÖ ADMIN_ID - –ù–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            print("   ‚ùå ADMIN_ID - –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            config_issues += 1
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        config_issues += 1
    
    # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
    print("\n" + "=" * 50)
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê:")
    
    total_issues = missing_files + missing_dirs + (total_imports - import_success) + config_issues
    
    if total_issues == 0:
        status = "üü¢ –û–¢–õ–ò–ß–ù–û"
        message = "–ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!"
    elif total_issues <= 2:
        status = "üü° –•–û–†–û–®–û"  
        message = "–ú–∏–Ω–æ—Ä–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è"
    else:
        status = "üî¥ –¢–†–ï–ë–£–ï–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô"
        message = "–°–µ—Ä—å–µ–∑–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    
    print(f"   –°—Ç–∞—Ç—É—Å: {status}")
    print(f"   –ü—Ä–æ–±–ª–µ–º –Ω–∞–π–¥–µ–Ω–æ: {total_issues}")
    print(f"   {message}")
    
    if total_issues == 0:
        print("\nüéâ –î–ª—è –ø–æ–ª–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python comprehensive_test.py")
    else:
        print("\nüîß –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python comprehensive_test.py")
    
    return total_issues == 0

if __name__ == "__main__":
    try:
        success = quick_status()
        sys.exit(0 if success else 1)
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞")
        sys.exit(2)
    except Exception as e:
        print(f"\n\nüí• –û—à–∏–±–∫–∞: {e}")
        sys.exit(3)