#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –±–æ—Ç–∞
"""

import asyncio
import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–∏–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/Users/konstantinbaranov/Desktop/eto vse ty/telegram-bot-project-1')

from config import BOT_TOKEN
import requests

def test_health_endpoint():
    """–¢–µ—Å—Ç health endpoint"""
    print("üè• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health endpoint...")
    try:
        response = requests.get("https://telegram-bot-project-1-production.up.railway.app/health", timeout=10)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ Health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç: {data}")
            return True
        else:
            print(f"‚ùå Health endpoint –≤–µ—Ä–Ω—É–ª –∫–æ–¥: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ health endpoint: {e}")
        return False

def test_telegram_webhook():
    """–¢–µ—Å—Ç Telegram webhook"""
    print("üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook...")
    try:
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/getWebhookInfo"
        response = requests.get(url, timeout=10)
        if response.status_code == 200:
            data = response.json()
            if data['ok']:
                webhook_info = data['result']
                webhook_url = webhook_info.get('url', '')
                if 'railway.app' in webhook_url:
                    print(f"‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ: {webhook_url}")
                    return True
                else:
                    print(f"‚ö†Ô∏è Webhook URL: {webhook_url}")
                    return False
            else:
                print(f"‚ùå Telegram API –æ—à–∏–±–∫–∞: {data}")
                return False
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ webhook –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ –ë–û–¢–ê")
    print(f"üïí –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 50)
    
    results = []
    
    # –¢–µ—Å—Ç 1: Health endpoint
    results.append(test_health_endpoint())
    print()
    
    # –¢–µ—Å—Ç 2: Webhook
    results.append(test_telegram_webhook())
    print()
    
    # –ò—Ç–æ–≥–∏
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 50)
    
    passed = sum(results)
    total = len(results)
    
    print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {passed}/{total}")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ü–†–û–ô–î–ï–ù–´! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞.")
    
    print()
    print("üîç –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:")
    print("- –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ChatGPT –Ω—É–∂–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –∫–≤–æ—Ç–∞ OpenAI")
    print("- –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É /start –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    print("- –ö–æ–º–∞–Ω–¥–∞ /chatgpt –ø–æ–∫–∞–∂–µ—Ç –º–µ–Ω—é AI —Ñ—É–Ω–∫—Ü–∏–π")

if __name__ == "__main__":
    main()
