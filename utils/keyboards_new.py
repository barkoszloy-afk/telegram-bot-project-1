# utils/keyboards.py - –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from config import ZODIAC_SIGNS, REACTION_EMOJIS, REACTION_NAMES
from .database import reactions_db

def get_zodiac_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∑–Ω–∞–∫–∞–º–∏ –∑–æ–¥–∏–∞–∫–∞"""
    keyboard = []
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 3 –≤ —Ä—è–¥
    for i in range(0, len(ZODIAC_SIGNS), 3):
        row = []
        for j in range(i, min(i + 3, len(ZODIAC_SIGNS))):
            sign_name, sign_emoji = ZODIAC_SIGNS[j]
            button = InlineKeyboardButton(
                text=f"{sign_emoji} {sign_name}",
                callback_data=f"zodiac_{sign_name.lower()}"
            )
            row.append(button)
        keyboard.append(row)
    
    return keyboard

def get_morning_variants_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É—Ç—Ä–µ–Ω–Ω–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤"""
    keyboard = [
        [InlineKeyboardButton("üåÖ –ó–∞—Ä—è–¥ —ç–Ω–µ—Ä–≥–∏–∏", callback_data='morning_variant1')],
        [InlineKeyboardButton("üåû –ü—É—Ç—å –∫ –ø–æ–±–µ–¥–∞–º", callback_data='morning_variant2')],
        [InlineKeyboardButton("‚≠ê –ó–≤–µ–∑–¥–Ω—ã–π –ø—É—Ç—å", callback_data='morning_variant3')]
    ]
    return keyboard

def get_reaction_keyboard(post_id: str):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏ –∏ —Å—á–µ—Ç—á–∏–∫–∞–º–∏"""
    data = reactions_db.data
    post_reactions = data.get('posts', {}).get(post_id, {})
    
    keyboard = []
    for i, (emoji, reaction_name) in enumerate(zip(REACTION_EMOJIS, REACTION_NAMES)):
        count = post_reactions.get(reaction_name, 0)
        button_text = f"{emoji} {count}" if count > 0 else emoji
        
        button = InlineKeyboardButton(
            text=button_text,
            callback_data=f"react_{reaction_name}_{post_id}"
        )
        keyboard.append([button])
    
    return keyboard

def create_admin_post_keyboard(post_id: str, keyboard_type: str = 'zodiac'):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø–æ—Å—Ç–æ–≤"""
    keyboard = []
    
    if keyboard_type == 'morning':
        # –£—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ—Å—Ç - –¥–æ–±–∞–≤–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã —É—Ç—Ä–∞
        keyboard.extend(get_morning_variants_keyboard())
    else:
        # –û–±—ã—á–Ω—ã–π –ø–æ—Å—Ç - –¥–æ–±–∞–≤–ª—è–µ–º –∑–æ–¥–∏–∞–∫
        keyboard.extend(get_zodiac_keyboard())
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–∫—Ü–∏–∏
    keyboard.extend(get_reaction_keyboard(post_id))
    
    return InlineKeyboardMarkup(keyboard)

def create_post_keyboard(post_id: str, has_morning_variants: bool = False):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤"""
    keyboard = []
    
    if has_morning_variants:
        keyboard.extend(get_morning_variants_keyboard())
    else:
        keyboard.extend(get_zodiac_keyboard())
    
    keyboard.extend(get_reaction_keyboard(post_id))
    
    return InlineKeyboardMarkup(keyboard)
