# utils/keyboards.py - –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä
from typing import Dict

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup

from config import REACTION_EMOJIS, REACTION_NAMES

def create_main_menu_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏"""
    keyboard = [
        [
            InlineKeyboardButton("üí´ –ú–æ—Ç–∏–≤–∞—Ü–∏—è", callback_data="category_motivation"),
            InlineKeyboardButton("üîÆ –≠–∑–æ—Ç–µ—Ä–∏–∫–∞", callback_data="category_esoteric")
        ],
        [
            InlineKeyboardButton("üéØ –†–∞–∑–≤–∏—Ç–∏–µ", callback_data="category_development"),
            InlineKeyboardButton("üåü –ó–¥–æ—Ä–æ–≤—å–µ", callback_data="category_health")
        ],
        [
            InlineKeyboardButton("üíù –û—Ç–Ω–æ—à–µ–Ω–∏—è", callback_data="category_relationships")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

def create_submenu_keyboard(category: str):
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–¥–º–µ–Ω—é –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    keyboard = [
        [
            InlineKeyboardButton("üìù –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å—Ç", callback_data=f"get_post_{category}"),
            InlineKeyboardButton("üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", callback_data=f"subscribe_{category}")
        ],
        [
            InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_reaction_keyboard(post_id: str):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏-—Ä–µ–∞–∫—Ü–∏—è–º–∏ –¥–ª—è –ø–æ—Å—Ç–∞.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç InlineKeyboardMarkup.
    """
    buttons = []
    # –°–æ–∑–¥–∞–µ–º –æ–¥–∏–Ω —Ä—è–¥ —Å —ç–º–æ–¥–∑–∏
    row = [
        InlineKeyboardButton(
            text=emoji,
            callback_data=f"reaction_{idx}_{post_id}"
        ) for idx, emoji in enumerate(REACTION_EMOJIS)
    ]
    buttons.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    buttons.append([
        InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data=f"stats_{post_id}")
    ])
    
    return InlineKeyboardMarkup(buttons)

def create_back_to_menu_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é'"""
    keyboard = [[InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]]
    return InlineKeyboardMarkup(keyboard)

def create_zodiac_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞"""
    from config import ZODIAC_SIGNS, ZODIAC_REVERSE_MAPPING
    
    keyboard = []
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ç–∫—É –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞ 3x4
    for i in range(0, len(ZODIAC_SIGNS), 3):
        row = []
        for j in range(i, min(i + 3, len(ZODIAC_SIGNS))):
            sign_name, sign_emoji = ZODIAC_SIGNS[j]
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –∫–ª—é—á–∏ –¥–ª—è callback_data
            english_key = ZODIAC_REVERSE_MAPPING.get(sign_name, sign_name.lower())
            button = InlineKeyboardButton(
                text=f"{sign_emoji} {sign_name}",
                callback_data=f"zodiac_{english_key}"
            )
            row.append(button)
        keyboard.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")])
    
    return InlineKeyboardMarkup(keyboard)


def create_admin_main_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    keyboard = [
        ["–ü–æ—Å—Ç—ã", "üìù –ü–æ—Å—Ç", "üìÑ –õ–æ–≥–∏"],
        ["üõ†Ô∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", "üìã –ö–æ–º–∞–Ω–¥—ã"],
        ["‚ùå –û—Ç–º–µ–Ω–∞", "‚ÑπÔ∏è –ü–æ–º–æ—â—å"],
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)


def create_posts_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞–∑–¥–µ–ª–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π"""
    keyboard = [
        ["–ì–æ—Ä–æ—Å–∫–æ–ø", "–ö–∞—Ä—Ç–∞ –¥–Ω—è"],
        ["–í–µ—á–µ—Ä–Ω–µ–µ –ø–æ—Å–ª–∞–Ω–∏–µ", "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ"],
        ["–õ—É–Ω–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑", "–°–≤–æ–±–æ–¥–Ω–∞—è –ø—É–±–ª–∏–∫–∞—Ü–∏—è"],
        ["‚¨ÖÔ∏è –ù–∞–∑–∞–¥"],
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)


def create_reaction_buttons(reactions: Dict[str, int]):
    """–°–æ–∑–¥–∞–µ—Ç —Ä—è–¥ –∫–Ω–æ–ø–æ–∫ —Å —Ä–µ–∞–∫—Ü–∏—è–º–∏ –∏ —Å—á–µ—Ç—á–∏–∫–∞–º–∏"""
    if len(REACTION_EMOJIS) != len(REACTION_NAMES):
        raise ValueError("REACTION_EMOJIS and REACTION_NAMES lengths mismatch")
    row = [
        InlineKeyboardButton(
            f"{REACTION_EMOJIS[i]} {reactions.get(REACTION_NAMES[i], 0)}",
            callback_data=f"react_{REACTION_NAMES[i]}"
        )
        for i in range(len(REACTION_EMOJIS))
    ]
    return [row]
