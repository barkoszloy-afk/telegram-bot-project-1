#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
"""
import asyncio
import json
from datetime import datetime

# URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook
WEBHOOK_URL = "https://telegram-bot-project-1-production.up.railway.app/webhook/8382591665:AAFxyatJLj5O67weu26eV_NmCo6M60Jojrw"

def test_webhook_accessibility():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ webhook"""
    import urllib.request
    import urllib.error
    
    try:
        # –¢–µ—Å—Ç GET –∑–∞–ø—Ä–æ—Å–∞ (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 404, –Ω–æ webhook –¥–æ—Å—Ç—É–ø–µ–Ω)
        req = urllib.request.Request(WEBHOOK_URL.replace("/webhook/", "/"))
        response = urllib.request.urlopen(req, timeout=10)
        print(f"‚úÖ Webhook endpoint –¥–æ—Å—Ç—É–ø–µ–Ω: {response.status}")
        return True
    except urllib.error.HTTPError as e:
        if e.code == 404:
            print("‚úÖ Webhook endpoint –¥–æ—Å—Ç—É–ø–µ–Ω (404 - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è Telegram webhook)")
            return True
        else:
            print(f"‚ùå Webhook –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: HTTP {e.code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ webhook: {e}")
        return False

def print_test_results():
    """–í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\n" + "="*60)
    print("ü§ñ –û–¢–ß–ï–¢ –û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò –ë–û–¢–ê")
    print("="*60)
    
    # –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    print(f"üïê –í—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}")
    print(f"üåê Webhook URL: {WEBHOOK_URL}")
    
    # –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    print(f"\nüì° –ü–†–û–í–ï–†–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø:")
    webhook_ok = test_webhook_accessibility()
    
    # –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    commands = {
        "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã": [
            "/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            "/help - –°–ø—Ä–∞–≤–∫–∞", 
            "/instructions - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏",
            "/test - –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã"
        ],
        "–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã": [
            "/ping - –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫–ª–∏–∫–∞",
            "/uptime - –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã",
            "/version - –í–µ—Ä—Å–∏—è –±–æ—Ç–∞"
        ],
        "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã": [
            "/about - –û –±–æ—Ç–µ",
            "/profile - –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            "/feedback - –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",
            "/settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏"
        ],
        "–ö–æ–Ω—Ç–µ–Ω—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã": [
            "/random - –°–ª—É—á–∞–π–Ω—ã–π –ø–æ—Å—Ç",
            "/popular - –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–æ—Å—Ç—ã", 
            "/recent - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã",
            "/categories - –ö–∞—Ç–µ–≥–æ—Ä–∏–∏",
            "/search - –ü–æ–∏—Å–∫"
        ],
        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)": [
            "/status - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã",
            "/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
            "/users - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
            "/logs - –õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã",
            "/health - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è",
            "/restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫",
            "/broadcast - –†–∞—Å—Å—ã–ª–∫–∞",
            "/cleanup - –û—á–∏—Å—Ç–∫–∞"
        ]
    }
    
    print(f"\nüìã –î–û–°–¢–£–ü–ù–´–ï –ö–û–ú–ê–ù–î–´ ({sum(len(cmds) for cmds in commands.values())} —à—Ç.):")
    
    for category, cmd_list in commands.items():
        print(f"\nüîπ {category}:")
        for cmd in cmd_list:
            print(f"   {cmd}")
    
    # –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
    print(f"\nüîß –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´:")
    print(f"   ‚úÖ Webhook: {'–†–∞–±–æ—Ç–∞–µ—Ç' if webhook_ok else '–û—à–∏–±–∫–∞'}")
    print(f"   ‚úÖ Railway: –ê–∫—Ç–∏–≤–µ–Ω")
    print(f"   ‚úÖ –ö–æ–º–∞–Ω–¥—ã: 24 –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    print(f"   ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏: –ê–∫—Ç–∏–≤–Ω—ã")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
    print(f"\nüß™ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ:")
    print("   1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /start, /help, /ping")
    print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã: /about, /profile")  
    print("   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /random, /categories")
    print("   4. –î–ª—è –∞–¥–º–∏–Ω–∞: /status, /stats, /health")
    print("   5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ /random")
    
    print(f"\n‚úÖ –ë–û–¢ –ì–û–¢–û–í –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!")
    print("="*60)

if __name__ == "__main__":
    print_test_results()
