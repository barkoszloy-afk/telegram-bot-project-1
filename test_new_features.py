# test_new_features.py - –¢–µ—Å—Ç –Ω–æ–≤—ã—Ö —ç–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
import asyncio
import sys
import pytest
from telegram import Update
from telegram.ext import ContextTypes

# –≠–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä
@pytest.mark.asyncio
async def test_new_keyboards():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–û–í–´–• –≠–ó–û–¢–ï–†–ò–ß–ï–°–ö–ò–• –§–£–ù–ö–¶–ò–ô")
    print("=" * 50)
    
    try:
        from utils.keyboards import (
            create_esoteric_submenu,
            create_motivation_submenu, 
            create_development_submenu,
            create_health_submenu,
            create_relationships_submenu,
            create_zodiac_keyboard
        )
        
        print("‚úÖ –í—Å–µ submenu —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–æ–µ –ø–æ–¥–º–µ–Ω—é
        esoteric_keyboard = create_esoteric_submenu()
        print(f"‚úÖ –≠–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–æ–µ –ø–æ–¥–º–µ–Ω—é: {len(esoteric_keyboard.inline_keyboard)} —Ä—è–¥–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —ç–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–æ–º –º–µ–Ω—é
        button_count = sum(len(row) for row in esoteric_keyboard.inline_keyboard)
        expected_buttons = 7  # 6 —ç–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π + –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        
        if button_count == expected_buttons:
            print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫: {button_count}")
        else:
            print(f"‚ö†Ô∏è –û–∂–∏–¥–∞–ª–æ—Å—å {expected_buttons} –∫–Ω–æ–ø–æ–∫, –ø–æ–ª—É—á–µ–Ω–æ {button_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ callback_data
        expected_callbacks = [
            'esoteric_horoscope', 'esoteric_daily_card',
            'esoteric_good_morning', 'esoteric_lunar_forecast', 
            'esoteric_interactive', 'esoteric_evening_message',
            'main_menu'
        ]
        
        found_callbacks = []
        for row in esoteric_keyboard.inline_keyboard:
            for button in row:
                found_callbacks.append(button.callback_data)
        
        print("üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ callback_data:")
        for cb in found_callbacks:
            status = "‚úÖ" if cb in expected_callbacks else "‚ùå"
            print(f"  {status} {cb}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–æ–¥–∏–∞–∫–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        zodiac_keyboard = create_zodiac_keyboard()
        zodiac_buttons = sum(len(row) for row in zodiac_keyboard.inline_keyboard)
        print(f"‚úÖ –ó–æ–¥–∏–∞–∫–∞–ª—å–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞: {zodiac_buttons} –∫–Ω–æ–ø–æ–∫")
        
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ö–õ–ê–í–ò–ê–¢–£–† –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

@pytest.mark.asyncio
async def test_callback_data():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É callback –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï CALLBACK –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í")
    print("=" * 50)
    
    test_callbacks = [
        "category_esoteric",
        "esoteric_horoscope", 
        "esoteric_daily_card",
        "esoteric_good_morning",
        "esoteric_lunar_forecast", 
        "esoteric_interactive",
        "esoteric_evening_message",
        "zodiac_aries",
        "zodiac_leo",
        "zodiac_scorpio"
    ]
    
    for callback in test_callbacks:
        if callback.startswith("category_"):
            print(f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {callback}")
        elif callback.startswith("esoteric_"):
            print(f"‚úÖ –≠–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è: {callback}")
        elif callback.startswith("zodiac_"):
            print(f"‚úÖ –ó–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞: {callback}")
    
    print(f"\nüìä –í—Å–µ–≥–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ {len(test_callbacks)} callback'–æ–≤")
    return True

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ù–û–í–´–• –§–£–ù–ö–¶–ò–ô")
    print("=" * 60)
    
    keyboard_test = await test_new_keyboards()
    callback_test = await test_callback_data()
    
    if keyboard_test and callback_test:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("üîÆ –ù–æ–≤—ã–µ —ç–∑–æ—Ç–µ—Ä–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        return 0
    else:
        print("\n‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò!")
        return 1

if __name__ == "__main__":
    sys.exit(asyncio.run(main()))
