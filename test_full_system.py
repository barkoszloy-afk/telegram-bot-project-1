# test_full_system.py - –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç –∫—Ä–∞—Å–∏–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –º–µ–Ω—é

def test_beautiful_layout():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫—Ä–∞—Å–∏–≤–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫"""
    
    print("üé® –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ö–†–ê–°–ò–í–û–ô –°–ò–°–¢–ï–ú–´ –ö–ù–û–ü–û–ö")
    print("=" * 70)
    
    try:
        from utils.keyboards import (
            create_main_menu_keyboard,
            create_motivation_submenu,
            create_esoteric_submenu,
            create_development_submenu,
            create_health_submenu,
            create_relationships_submenu,
            create_zodiac_keyboard,
            get_reaction_keyboard
        )
        
        # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        print("\nüè† –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ (–∫—Ä–∞—Å–∏–≤–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ 2x2 + 1):")
        main_menu = create_main_menu_keyboard()
        for i, row in enumerate(main_menu.inline_keyboard):
            row_buttons = " | ".join([btn.text for btn in row])
            print(f"   [{i+1}] {row_buttons}")
        
        # –ú–æ—Ç–∏–≤–∞—Ü–∏—è
        print("\nüí´ –ú–û–¢–ò–í–ê–¶–ò–Ø (–ª–æ–≥–∏—á–Ω—ã–µ –ø–∞—Ä—ã):")
        motivation_menu = create_motivation_submenu()
        for i, row in enumerate(motivation_menu.inline_keyboard):
            row_buttons = " | ".join([btn.text for btn in row])
            print(f"   [{i+1}] {row_buttons}")
        
        # –≠–∑–æ—Ç–µ—Ä–∏–∫–∞
        print("\nüîÆ –≠–ó–û–¢–ï–†–ò–ö–ê (—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä—ã):")
        esoteric_menu = create_esoteric_submenu()
        for i, row in enumerate(esoteric_menu.inline_keyboard):
            row_buttons = " | ".join([btn.text for btn in row])
            print(f"   [{i+1}] {row_buttons}")
        
        # –†–∞–∑–≤–∏—Ç–∏–µ
        print("\nüéØ –†–ê–ó–í–ò–¢–ò–ï (—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä—ã):")
        development_menu = create_development_submenu()
        for i, row in enumerate(development_menu.inline_keyboard):
            row_buttons = " | ".join([btn.text for btn in row])
            print(f"   [{i+1}] {row_buttons}")
        
        # –ó–¥–æ—Ä–æ–≤—å–µ
        print("\nüåü –ó–î–û–†–û–í–¨–ï (—Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ + –º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ):")
        health_menu = create_health_submenu()
        for i, row in enumerate(health_menu.inline_keyboard):
            row_buttons = " | ".join([btn.text for btn in row])
            print(f"   [{i+1}] {row_buttons}")
        
        # –û—Ç–Ω–æ—à–µ–Ω–∏—è
        print("\nüíù –û–¢–ù–û–®–ï–ù–ò–Ø (–ª–∏—á–Ω–æ–µ + –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ):")
        relationships_menu = create_relationships_submenu()
        for i, row in enumerate(relationships_menu.inline_keyboard):
            row_buttons = " | ".join([btn.text for btn in row])
            print(f"   [{i+1}] {row_buttons}")
        
        # –ó–æ–¥–∏–∞–∫
        print("\nüîÆ –ó–û–î–ò–ê–ö (–∫—Ä–∞—Å–∏–≤–∞—è —Å–µ—Ç–∫–∞ 3x4):")
        zodiac_menu = create_zodiac_keyboard()
        for i, row in enumerate(zodiac_menu.inline_keyboard[:-1]):  # –±–µ–∑ –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥
            row_buttons = " | ".join([btn.text for btn in row])
            print(f"   [{i+1}] {row_buttons}")
        print(f"   [5] {zodiac_menu.inline_keyboard[-1][0].text}")
        
        # –†–µ–∞–∫—Ü–∏–∏
        print("\n‚ù§Ô∏è –†–ï–ê–ö–¶–ò–ò (–∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ —Ä—è–¥—ã):")
        reactions = get_reaction_keyboard("demo123")
        for i, row in enumerate(reactions):
            row_buttons = " | ".join([btn.text for btn in row])
            print(f"   [{i+1}] {row_buttons}")
        
        print("\n‚ú® –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê –ö–†–ê–°–ò–í–û–ì–û –†–ê–°–ü–û–õ–û–ñ–ï–ù–ò–Ø:")
        print("   ‚Ä¢ –õ–æ–≥–∏—á–Ω—ã–µ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ (—É—Ç—Ä–æ/–≤–µ—á–µ—Ä, —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ/–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ)")
        print("   ‚Ä¢ –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ (—Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–µ–º—ã —Ä—è–¥–æ–º)")
        print("   ‚Ä¢ –ö–æ–º–ø–∞–∫—Ç–Ω–æ—Å—Ç—å (2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É –≤–º–µ—Å—Ç–æ 1)")
        print("   ‚Ä¢ –°–∏–º–º–µ—Ç—Ä–∏—è (—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥)")
        print("   ‚Ä¢ –õ–µ–≥–∫–æ—Å—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–∫–Ω–æ–ø–∫–∞ '–ù–∞–∑–∞–¥' –≤—Å–µ–≥–¥–∞ –≤–Ω–∏–∑—É)")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")
        return False

def test_content_completeness():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª–Ω–æ—Ç—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤–æ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö"""
    
    print("\nüìù –¢–ï–°–¢ –ü–û–õ–ù–û–¢–´ –ö–û–ù–¢–ï–ù–¢–ê")
    print("=" * 40)
    
    content_status = {
        "üí´ –ú–æ—Ç–∏–≤–∞—Ü–∏—è": {
            "üåÖ –£—Ç—Ä–µ–Ω–Ω—è—è –º–æ—Ç–∏–≤–∞—Ü–∏—è": "‚úÖ –ì–æ—Ç–æ–≤",
            "üåô –í–µ—á–µ—Ä–Ω–∏–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è": "‚úÖ –ì–æ—Ç–æ–≤", 
            "üí™ –ü—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π": "‚úÖ –ì–æ—Ç–æ–≤",
            "üéØ –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ü–µ–ª–µ–π": "‚úÖ –ì–æ—Ç–æ–≤"
        },
        "üîÆ –≠–∑–æ—Ç–µ—Ä–∏–∫–∞": {
            "üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –¥–µ–Ω—å": "‚úÖ –ì–æ—Ç–æ–≤ + 12 –∑–Ω–∞–∫–æ–≤",
            "üåô –õ—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å": "‚úÖ –ì–æ—Ç–æ–≤",
            "üî¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è": "‚úÖ –ì–æ—Ç–æ–≤",
            "üÉè –ö–∞—Ä—Ç—ã –¢–∞—Ä–æ": "‚úÖ –ì–æ—Ç–æ–≤"
        },
        "üéØ –†–∞–∑–≤–∏—Ç–∏–µ": {
            "üß† –†–∞–∑–≤–∏—Ç–∏–µ –º—ã—à–ª–µ–Ω–∏—è": "‚úÖ –ì–æ—Ç–æ–≤",
            "üìö –û–±—É—á–µ–Ω–∏–µ –∏ –∑–Ω–∞–Ω–∏—è": "‚úÖ –ì–æ—Ç–æ–≤",
            "üé® –¢–≤–æ—Ä—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ": "‚úÖ –ì–æ—Ç–æ–≤",
            "üíº –ö–∞—Ä—å–µ—Ä–∞ –∏ –±–∏–∑–Ω–µ—Å": "‚úÖ –ì–æ—Ç–æ–≤"
        },
        "üåü –ó–¥–æ—Ä–æ–≤—å–µ": {
            "üèÉ‚Äç‚ôÇÔ∏è –§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å": "‚úÖ –ì–æ—Ç–æ–≤",
            "üßò‚Äç‚ôÄÔ∏è –ú–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ": "‚úÖ –ì–æ—Ç–æ–≤",
            "ü•ó –ü–∏—Ç–∞–Ω–∏–µ –∏ –¥–∏–µ—Ç–∞": "‚úÖ –ì–æ—Ç–æ–≤",
            "üò¥ –°–æ–Ω –∏ –æ—Ç–¥—ã—Ö": "‚úÖ –ì–æ—Ç–æ–≤"
        },
        "üíù –û—Ç–Ω–æ—à–µ–Ω–∏—è": {
            "üíï –õ—é–±–æ–≤—å –∏ —Ä–æ–º–∞–Ω—Ç–∏–∫–∞": "‚úÖ –ì–æ—Ç–æ–≤",
            "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–µ–º—å—è –∏ –¥–µ—Ç–∏": "‚úÖ –ì–æ—Ç–æ–≤",
            "üë• –î—Ä—É–∂–±–∞ –∏ –æ–±—â–µ–Ω–∏–µ": "‚úÖ –ì–æ—Ç–æ–≤",
            "ü§ù –†–∞–±–æ—á–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è": "‚úÖ –ì–æ—Ç–æ–≤"
        }
    }
    
    total_ready = 0
    total_items = 0
    
    for category, items in content_status.items():
        print(f"\n{category}:")
        for item, status in items.items():
            print(f"   {item}: {status}")
            if "‚úÖ" in status:
                total_ready += 1
            total_items += 1
    
    print(f"\nüìä –ò–¢–û–ì–û: {total_ready}/{total_items} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≥–æ—Ç–æ–≤–æ")
    print(f"üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: {(total_ready/total_items)*100:.0f}%")
    
    if total_ready == total_items:
        print("üéâ –í–°–ï –ö–ê–¢–ï–ì–û–†–ò–ò –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–´!")
        return True
    else:
        print("‚ö†Ô∏è –ï—Å—Ç—å –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã")
        return False

def test_navigation_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
    
    print("\nüß≠ –¢–ï–°–¢ –õ–û–ì–ò–ö–ò –ù–ê–í–ò–ì–ê–¶–ò–ò")
    print("=" * 40)
    
    navigation_map = {
        "/start": "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        "category_motivation": "üí´ –ú–æ—Ç–∏–≤–∞—Ü–∏—è ‚Üí –ø–æ–¥–º–µ–Ω—é",
        "motivation_morning": "üåÖ –£—Ç—Ä–µ–Ω–Ω—è—è –º–æ—Ç–∏–≤–∞—Ü–∏—è ‚Üí –∫–æ–Ω—Ç–µ–Ω—Ç + —Ä–µ–∞–∫—Ü–∏–∏",
        "category_esoteric": "üîÆ –≠–∑–æ—Ç–µ—Ä–∏–∫–∞ ‚Üí –ø–æ–¥–º–µ–Ω—é", 
        "esoteric_horoscope": "üîÆ –ì–æ—Ä–æ—Å–∫–æ–ø ‚Üí –≤—ã–±–æ—Ä –∑–Ω–∞–∫–∞",
        "zodiac_–æ–≤–µ–Ω": "‚ôà –û–≤–µ–Ω ‚Üí –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø",
        "main_menu": "‚¨ÖÔ∏è –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        "react_heart_post123": "‚ù§Ô∏è –†–µ–∞–∫—Ü–∏—è –Ω–∞ –ø–æ—Å—Ç"
    }
    
    print("üó∫Ô∏è –ö–∞—Ä—Ç–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:")
    for command, description in navigation_map.items():
        print(f"   {command} ‚Üí {description}")
    
    print("\n‚úÖ –ü–†–ò–ù–¶–ò–ü–´ –ù–ê–í–ò–ì–ê–¶–ò–ò:")
    print("   ‚Ä¢ –ö–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å –∏–º–µ–µ—Ç –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'")
    print("   ‚Ä¢ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–æ—Å—Ç—É–ø–Ω–æ –∏–∑ –ª—é–±–æ–≥–æ –ø–æ–¥–º–µ–Ω—é")
    print("   ‚Ä¢ –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª—é—á–∞–µ—Ç —Ä–µ–∞–∫—Ü–∏–∏ + –Ω–∞–≤–∏–≥–∞—Ü–∏—é")
    print("   ‚Ä¢ –õ–æ–≥–∏—á–Ω–∞—è –∏–µ—Ä–∞—Ä—Ö–∏—è: –ì–ª–∞–≤–Ω–æ–µ ‚Üí –ö–∞—Ç–µ–≥–æ—Ä–∏—è ‚Üí –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è ‚Üí –ö–æ–Ω—Ç–µ–Ω—Ç")
    
    return True

if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ì–û –¢–ï–°–¢–ê –°–ò–°–¢–ï–ú–´")
    print("="*50)
    
    # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
    test1 = test_beautiful_layout()
    test2 = test_content_completeness() 
    test3 = test_navigation_logic()
    
    if test1 and test2 and test3:
        print("\nüèÜ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("üé® –ö—Ä–∞—Å–∏–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫–Ω–æ–ø–æ–∫ –≥–æ—Ç–æ–≤–∞!")
        print("üì± –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞!")
        print("üìù –ö–æ–Ω—Ç–µ–Ω—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤!")
        print("üöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    else:
        print("\n‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –í –¢–ï–°–¢–ê–•")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
