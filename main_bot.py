# main_bot_refactored.py - –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞
import logging
import asyncio
from telegram import Update
from telegram.ext import (
    Application, CommandHandler, CallbackQueryHandler, 
    MessageHandler, filters, ContextTypes
)

# –ò–º–ø–æ—Ä—Ç—ã –∏–∑ –Ω–∞—à–∏—Ö –º–æ–¥—É–ª–µ–π
from config import (
    BOT_TOKEN, ADMIN_ID, validate_config,
    CONNECT_TIMEOUT, READ_TIMEOUT, WRITE_TIMEOUT, POOL_TIMEOUT
)
from utils.database import reactions_db
from utils.keyboards import create_main_menu_keyboard
from handlers.reactions import handle_reaction_callback
from handlers.admin import (
    handle_admin_command, handle_admin_callback, 
    handle_morning_variant_callback
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO,
    handlers=[
        logging.FileHandler('bot.log', encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /start - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    if not update.message:
        return
        
    user_name = update.effective_user.first_name if update.effective_user else "–¥—Ä—É–≥"
    welcome_text = f"""
üåü –ü—Ä–∏–≤–µ—Ç, {user_name}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è! ‚ú®

üéØ **–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å —Ç–µ–º—É:**

ÔøΩ **–ú–æ—Ç–∏–≤–∞—Ü–∏—è** - –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–µ –∏–¥–µ–∏ –Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
üîÆ **–≠–∑–æ—Ç–µ—Ä–∏–∫–∞** - –≥–æ—Ä–æ—Å–∫–æ–ø—ã, –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—è –∏ –¥—É—Ö–æ–≤–Ω–æ—Å—Ç—å  
ÔøΩ **–†–∞–∑–≤–∏—Ç–∏–µ** - –ª–∏—á–Ω–æ—Å—Ç–Ω—ã–π —Ä–æ—Å—Ç –∏ –æ–±—É—á–µ–Ω–∏–µ
ÔøΩ **–ó–¥–æ—Ä–æ–≤—å–µ** - –∑–∞–±–æ—Ç–∞ –æ —Ç–µ–ª–µ –∏ —Ä–∞–∑—É–º–µ
üíù **–û—Ç–Ω–æ—à–µ–Ω–∏—è** - –≥–∞—Ä–º–æ–Ω–∏—è –≤ –æ–±—â–µ–Ω–∏–∏ –∏ –ª—é–±–≤–∏

üëá –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:
"""
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –≥–ª–∞–≤–Ω—ã–º –º–µ–Ω—é
    await update.message.reply_text(
        welcome_text, 
        reply_markup=create_main_menu_keyboard()
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ /help"""
    if not update.message:
        return
        
    help_text = """
üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/admin - –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)

üì± –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:
‚Ä¢ –ß–∏—Ç–∞–π—Ç–µ –ø–æ—Å—Ç—ã –≤ –∫–∞–Ω–∞–ª–µ
‚Ä¢ –°—Ç–∞–≤—å—Ç–µ —Ä–µ–∞–∫—Ü–∏–∏ ‚ù§Ô∏èüôèü•π
‚Ä¢ –í—ã–±–∏—Ä–∞–π—Ç–µ —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞
‚Ä¢ –£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ —É—Ç—Ä–µ–Ω–Ω–∏—Ö –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è—Ö

üí´ –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º!
"""
    await update.message.reply_text(help_text)

async def handle_callback_query(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤"""
    query = update.callback_query
    if not query or not query.data:
        return
    
    data = query.data
    
    try:
        # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        if data == "main_menu":
            await show_main_menu(update, context)
        
        # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ (–æ—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã)
        elif data.startswith("category_"):
            await handle_category_selection(update, context)
        
        # –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–æ—Ç–∏–≤–∞—Ü–∏–∏
        elif data.startswith("motivation_"):
            await handle_motivation_selection(update, context)
        
        # –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —ç–∑–æ—Ç–µ—Ä–∏–∫–∏
        elif data.startswith("esoteric_"):
            await handle_esoteric_selection(update, context)
        
        # –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞–∑–≤–∏—Ç–∏—è
        elif data.startswith("development_"):
            await handle_development_selection(update, context)
        
        # –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–¥–æ—Ä–æ–≤—å—è
        elif data.startswith("health_"):
            await handle_health_selection(update, context)
        
        # –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–π
        elif data.startswith("relationships_"):
            await handle_relationships_selection(update, context)
        
        # –†–µ–∞–∫—Ü–∏–∏ –Ω–∞ –ø–æ—Å—Ç—ã
        elif data.startswith("react_"):
            await handle_reaction_callback(update, context)
        
        # –£—Ç—Ä–µ–Ω–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        elif data.startswith("morning_variant"):
            await handle_morning_variant_callback(update, context)
        
        # –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
        elif data.startswith("admin_"):
            await handle_admin_callback(update, context)
        
        # –ó–æ–¥–∏–∞–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞–∫–∏
        elif data.startswith("zodiac_"):
            await handle_zodiac_selection(update, context)
        
        # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        else:
            await query.answer("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
            logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback: {data}")
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback {data}: {e}")
        try:
            await query.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
        except:
            pass

async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    query = update.callback_query
    if not query:
        return
        
    text = """
üè† **–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ**

–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—é:

üí´ **–ú–æ—Ç–∏–≤–∞—Ü–∏—è** - –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∏ —ç–Ω–µ—Ä–≥–∏—è
üîÆ **–≠–∑–æ—Ç–µ—Ä–∏–∫–∞** - –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—è –∏ –¥—É—Ö–æ–≤–Ω–æ—Å—Ç—å  
üéØ **–†–∞–∑–≤–∏—Ç–∏–µ** - –ª–∏—á–Ω–æ—Å—Ç–Ω—ã–π —Ä–æ—Å—Ç
üåü **–ó–¥–æ—Ä–æ–≤—å–µ** - –∑–∞–±–æ—Ç–∞ –æ —Å–µ–±–µ
üíù **–û—Ç–Ω–æ—à–µ–Ω–∏—è** - –≥–∞—Ä–º–æ–Ω–∏—è –≤ –æ–±—â–µ–Ω–∏–∏
"""
    
    await query.edit_message_text(
        text,
        reply_markup=create_main_menu_keyboard(),
        parse_mode='Markdown'
    )

async def handle_category_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    from utils.keyboards import (
        create_motivation_submenu, create_esoteric_submenu,
        create_development_submenu, create_health_submenu,
        create_relationships_submenu
    )
    
    query = update.callback_query
    if not query or not query.data:
        return
    
    category = query.data.replace("category_", "")
    
    if category == "motivation":
        text = """
üí´ **–ú–û–¢–ò–í–ê–¶–ò–Ø**

–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:

üåÖ **–£—Ç—Ä–µ–Ω–Ω—è—è –º–æ—Ç–∏–≤–∞—Ü–∏—è** - —ç–Ω–µ—Ä–≥–∏—è –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å
üåô **–í–µ—á–µ—Ä–Ω–∏–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è** - –∏—Ç–æ–≥–∏ –∏ –ø–ª–∞–Ω—ã
üí™ **–ü—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π** - —Å–∏–ª–∞ –¥—É—Ö–∞
üéØ **–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ü–µ–ª–µ–π** - –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É
"""
        keyboard = create_motivation_submenu()
        
    elif category == "esoteric":
        text = """
üîÆ **–≠–ó–û–¢–ï–†–ò–ö–ê**

–ó–∞–≥–ª—è–Ω–∏—Ç–µ –≤ –º–∏—Ä –¥—É—Ö–æ–≤–Ω–æ—Å—Ç–∏:

üîÆ **–ì–æ—Ä–æ—Å–∫–æ–ø –Ω–∞ –¥–µ–Ω—å** - –∑–≤–µ–∑–¥–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
üåô **–õ—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å** - –≤–ª–∏—è–Ω–∏–µ –ª—É–Ω—ã
üî¢ **–ù—É–º–µ—Ä–æ–ª–æ–≥–∏—è** - –º–∞–≥–∏—è —á–∏—Å–µ–ª
üÉè **–ö–∞—Ä—Ç—ã –¢–∞—Ä–æ** - –¥—Ä–µ–≤–Ω—è—è –º—É–¥—Ä–æ—Å—Ç—å
"""
        keyboard = create_esoteric_submenu()
        
    elif category == "development":
        text = """
üéØ **–†–ê–ó–í–ò–¢–ò–ï**

–ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ —Å–µ–±—è:

üß† **–†–∞–∑–≤–∏—Ç–∏–µ –º—ã—à–ª–µ–Ω–∏—è** - –æ—Å—Ç—Ä—ã–π —É–º
üìö **–û–±—É—á–µ–Ω–∏–µ –∏ –∑–Ω–∞–Ω–∏—è** - –Ω–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏
üé® **–¢–≤–æ—Ä—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ** - —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ —Ç–∞–ª–∞–Ω—Ç–∞
üíº **–ö–∞—Ä—å–µ—Ä–∞ –∏ –±–∏–∑–Ω–µ—Å** - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–æ—Å—Ç
"""
        keyboard = create_development_submenu()
        
    elif category == "health":
        text = """
üåü **–ó–î–û–†–û–í–¨–ï**

–ó–∞–±–æ—Ç—å—Ç–µ—Å—å –æ —Å–≤–æ–µ–º –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–∏:

üèÉ‚Äç‚ôÇÔ∏è **–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å** - —Å–∏–ª–∞ —Ç–µ–ª–∞
üßò‚Äç‚ôÄÔ∏è **–ú–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ** - –ø–æ–∫–æ–π –¥—É—à–∏
ü•ó **–ü–∏—Ç–∞–Ω–∏–µ –∏ –¥–∏–µ—Ç–∞** - —ç–Ω–µ—Ä–≥–∏—è –∏–∑–Ω—É—Ç—Ä–∏
üò¥ **–°–æ–Ω –∏ –æ—Ç–¥—ã—Ö** - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏–ª
"""
        keyboard = create_health_submenu()
        
    elif category == "relationships":
        text = """
üíù **–û–¢–ù–û–®–ï–ù–ò–Ø**

–ì–∞—Ä–º–æ–Ω–∏—è –≤ –æ–±—â–µ–Ω–∏–∏:

üíï **–õ—é–±–æ–≤—å –∏ —Ä–æ–º–∞–Ω—Ç–∏–∫–∞** - –¥–µ–ª–∞ —Å–µ—Ä–¥–µ—á–Ω—ã–µ
üë®‚Äçüë©‚Äçüëß‚Äçüë¶ **–°–µ–º—å—è –∏ –¥–µ—Ç–∏** - —Å–µ–º–µ–π–Ω–æ–µ —Å—á–∞—Å—Ç—å–µ
üë• **–î—Ä—É–∂–±–∞ –∏ –æ–±—â–µ–Ω–∏–µ** - —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏
ü§ù **–†–∞–±–æ—á–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è** - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ
"""
        keyboard = create_relationships_submenu()
    
    else:
        await query.answer("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è")
        return
    
    await query.edit_message_text(
        text,
        reply_markup=keyboard,
        parse_mode='Markdown'
    )

async def handle_motivation_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –≤ —Ä–∞–∑–¥–µ–ª–µ –º–æ—Ç–∏–≤–∞—Ü–∏–∏"""
    from telegram import InlineKeyboardMarkup, InlineKeyboardButton
    query = update.callback_query
    if not query or not query.data:
        return
    
    selection = query.data.replace("motivation_", "")
    
    content_map = {
        "morning": {
            "title": "üåÖ –£–¢–†–ï–ù–ù–Ø–Ø –ú–û–¢–ò–í–ê–¶–ò–Ø",
            "message": """

–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! ‚òÄÔ∏è

–ö–∞–∂–¥—ã–π –¥–µ–Ω—å - —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ. 
–°–µ–≥–æ–¥–Ω—è —Ç—ã –º–æ–∂–µ—à—å:

‚ú® –°–¥–µ–ª–∞—Ç—å —à–∞–≥ –∫ —Å–≤–æ–µ–π –º–µ—á—Ç–µ
üí™ –ü—Ä–µ–æ–¥–æ–ª–µ—Ç—å —Ç–æ, —á—Ç–æ –≤—á–µ—Ä–∞ –∫–∞–∑–∞–ª–æ—Å—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω—ã–º  
üéØ –ü—Ä–∏–±–ª–∏–∑–∏—Ç—å—Å—è –∫ —Å–≤–æ–∏–º —Ü–µ–ª—è–º
üåü –ü–æ–¥–∞—Ä–∏—Ç—å –º–∏—Ä—É —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–≤–µ—Ç

–ù–∞—á–Ω–∏ –¥–µ–Ω—å —Å —É–ª—ã–±–∫–∏ –∏ –≤–µ—Ä—ã –≤ —Å–µ–±—è! üí´
"""
        },
        "evening": {
            "title": "üåô –í–ï–ß–ï–†–ù–ò–ï –†–ê–ó–ú–´–®–õ–ï–ù–ò–Ø", 
            "message": """

–í–µ—á–µ—Ä - –≤—Ä–µ–º—è –ø–æ–¥–≤–µ–¥–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤ üåÜ

–ó–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å —Ç—ã:

üéØ –ü—Ä–æ–∂–∏–ª –µ—â–µ –æ–¥–∏–Ω –¥–µ–Ω—å —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏
üí´ –ü–æ–ª—É—á–∏–ª –Ω–æ–≤—ã–π –æ–ø—ã—Ç –∏ –∑–Ω–∞–Ω–∏—è
‚ù§Ô∏è –ü—Ä–æ—è–≤–∏–ª –∑–∞–±–æ—Ç—É –∫ —Å–µ–±–µ –∏ –±–ª–∏–∑–∫–∏–º
üåü –°—Ç–∞–ª –Ω–µ–º–Ω–æ–≥–æ –º—É–¥—Ä–µ–µ

–û—Ç–¥–æ—Ö–Ω–∏, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏ —Å–∏–ª—ã –∏ –≥–æ—Ç–æ–≤—å—Å—è –∫ –Ω–æ–≤—ã–º —Å–≤–µ—Ä—à–µ–Ω–∏—è–º! üí§
"""
        },
        "overcome": {
            "title": "üí™ –ü–†–ï–û–î–û–õ–ï–ù–ò–ï –¢–†–£–î–ù–û–°–¢–ï–ô",
            "message": """

–¢—Ä—É–¥–Ω–æ—Å—Ç–∏ - —ç—Ç–æ —Å—Ç—É–ø–µ–Ω–∏ –∫ —Ä–æ—Å—Ç—É üèîÔ∏è

–ü–æ–º–Ω–∏:

üî• –ê–ª–º–∞–∑ –æ–±—Ä–∞–∑—É–µ—Ç—Å—è –ø–æ–¥ –¥–∞–≤–ª–µ–Ω–∏–µ–º
üå± –°–∏–ª—å–Ω—ã–µ –∫–æ—Ä–Ω–∏ —Ä–∞—Å—Ç—É—Ç –≤ –±—É—Ä—é
‚≠ê –ó–≤–µ–∑–¥—ã —Å–≤–µ—Ç—è—Ç —è—Ä—á–µ –≤ —Ç–µ–º–Ω–æ—Ç–µ
üíé –¢–≤–æ—è —Å–∏–ª–∞ –ø—Ä–æ—è–≤–ª—è–µ—Ç—Å—è –≤ –∏—Å–ø—ã—Ç–∞–Ω–∏—è—Ö

–ö–∞–∂–¥–æ–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ –¥–µ–ª–∞–µ—Ç —Ç–µ–±—è —Å–∏–ª—å–Ω–µ–µ! üí™
"""
        },
        "goals": {
            "title": "üéØ –î–û–°–¢–ò–ñ–ï–ù–ò–ï –¶–ï–õ–ï–ô",
            "message": """

–¶–µ–ª—å –±–µ–∑ –ø–ª–∞–Ω–∞ - –≤—Å–µ–≥–æ –ª–∏—à—å –º–µ—á—Ç–∞ üìã

–°–µ–∫—Ä–µ—Ç—ã –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π:

üéØ –ß–µ—Ç–∫–æ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π —á—Ç–æ —Ö–æ—á–µ—à—å
üìÖ –†–∞–∑–±–µ–π –Ω–∞ –º–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏  
üìà –û—Ç–º–µ—á–∞–π –∫–∞–∂–¥—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
üîÑ –ë—É–¥—å –≥–∏–±–∫–∏–º –≤ –º–µ—Ç–æ–¥–∞—Ö
üí´ –í–µ—Ä—å –≤ —Å–≤–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

–¢–≤–æ–π —É—Å–ø–µ—Ö –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞! üöÄ
"""
        }
    }
    
    if selection in content_map:
        content = content_map[selection]
        full_text = f"{content['title']}{content['message']}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–∞–∫—Ü–∏–π
        from utils.keyboards import get_reaction_keyboard
        import uuid
        post_id = str(uuid.uuid4())[:8]
        
        reaction_keyboard = get_reaction_keyboard(post_id)
        back_button = [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –º–æ—Ç–∏–≤–∞—Ü–∏–∏", callback_data='category_motivation')]]
        
        keyboard = reaction_keyboard + back_button
        
        await query.edit_message_text(
            full_text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode='Markdown'
        )
    else:
        await query.answer("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è")

async def handle_esoteric_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –≤ —Ä–∞–∑–¥–µ–ª–µ —ç–∑–æ—Ç–µ—Ä–∏–∫–∏"""
    from telegram import InlineKeyboardMarkup, InlineKeyboardButton
    query = update.callback_query
    if not query or not query.data:
        return
    
    selection = query.data.replace("esoteric_", "")
    
    if selection == "horoscope":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞
        text = """
üîÆ **–ì–û–†–û–°–ö–û–ü –ù–ê –î–ï–ù–¨**

–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –≥–æ—Ä–æ—Å–∫–æ–ø–∞:

‚ú® –ö–∞–∂–¥—ã–π –∑–Ω–∞–∫ –ø–æ–ª—É—á–∏—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
"""
        from utils.keyboards import create_zodiac_keyboard
        await query.edit_message_text(
            text,
            reply_markup=create_zodiac_keyboard(),
            parse_mode='Markdown'
        )
    
    elif selection == "moon":
        content = {
            "title": "üåô –õ–£–ù–ù–´–ô –ö–ê–õ–ï–ù–î–ê–†–¨",
            "message": """

–õ—É–Ω–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ –Ω–∞—à–∏ —ç–º–æ—Ü–∏–∏, —ç–Ω–µ—Ä–≥–∏—é –∏ –∂–∏–∑–Ω–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã! üåï

üåô **–§–∞–∑—ã –õ—É–Ω—ã –∏ –∏—Ö –≤–ª–∏—è–Ω–∏–µ:**

üåë **–ù–æ–≤–æ–ª—É–Ω–∏–µ** - –≤—Ä–µ–º—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π –∏ –ø–ª–∞–Ω–æ–≤
üåì **–†–∞—Å—Ç—É—â–∞—è –õ—É–Ω–∞** - –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, —Ä–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤
üåï **–ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ** - –ø–∏–∫ —ç–Ω–µ—Ä–≥–∏–∏, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–µ–ª
üåó **–£–±—ã–≤–∞—é—â–∞—è –õ—É–Ω–∞** - –æ—Ç–ø—É—Å–∫–∞–Ω–∏–µ, –æ—á–∏—â–µ–Ω–∏–µ, –æ—Ç–¥—ã—Ö

‚ú® **–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π —Å–æ–≤–µ—Ç:** –°–ª–µ–¥–∏ –∑–∞ –ª—É–Ω–Ω—ã–º–∏ —Ü–∏–∫–ª–∞–º–∏ –∏ –ø–ª–∞–Ω–∏—Ä—É–π –¥–µ–ª–∞ –≤ –≥–∞—Ä–º–æ–Ω–∏–∏ —Å –Ω–∏–º–∏!

–ü—É—Å—Ç—å –õ—É–Ω–∞ —Å—Ç–∞–Ω–µ—Ç —Ç–≤–æ–∏–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º! üåô
"""
        }
        
        full_text = f"{content['title']}{content['message']}"
        
        from utils.keyboards import get_reaction_keyboard
        import uuid
        post_id = str(uuid.uuid4())[:8]
        
        reaction_keyboard = get_reaction_keyboard(post_id)
        back_button = [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —ç–∑–æ—Ç–µ—Ä–∏–∫–µ", callback_data='category_esoteric')]]
        
        keyboard = reaction_keyboard + back_button
        
        await query.edit_message_text(
            full_text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode='Markdown'
        )
    
    elif selection == "numerology":
        content = {
            "title": "üî¢ –ù–£–ú–ï–†–û–õ–û–ì–ò–Ø",
            "message": """

–ß–∏—Å–ª–∞ –Ω–µ—Å—É—Ç –≤ —Å–µ–±–µ —Ç–∞–π–Ω—É—é –º—É–¥—Ä–æ—Å—Ç—å –∏ —ç–Ω–µ—Ä–≥–∏—é! ‚ú®

üî¢ **–ó–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–µ–ª –≤ –∂–∏–∑–Ω–∏:**

1Ô∏è‚É£ **–ï–¥–∏–Ω–∏—Ü–∞** - –ª–∏–¥–µ—Ä—Å—Ç–≤–æ, –Ω–æ–≤—ã–µ –Ω–∞—á–∏–Ω–∞–Ω–∏—è
2Ô∏è‚É£ **–î–≤–æ–π–∫–∞** - –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ, —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ
3Ô∏è‚É£ **–¢—Ä–æ–π–∫–∞** - —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ, —Å–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏–µ
7Ô∏è‚É£ **–°–µ–º–µ—Ä–∫–∞** - –¥—É—Ö–æ–≤–Ω–æ—Å—Ç—å, –º—É–¥—Ä–æ—Å—Ç—å
8Ô∏è‚É£ **–í–æ—Å—å–º–µ—Ä–∫–∞** - –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–π —É—Å–ø–µ—Ö, –≤–ª–∞—Å—Ç—å
9Ô∏è‚É£ **–î–µ–≤—è—Ç–∫–∞** - –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ, —Å–ª—É–∂–µ–Ω–∏–µ –ª—é–¥—è–º

üí´ **–ü—Ä–∞–∫—Ç–∏–∫–∞:** –û–±—Ä–∞—â–∞–π –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —á–∏—Å–ª–∞ - —ç—Ç–æ –∑–Ω–∞–∫–∏ –í—Å–µ–ª–µ–Ω–Ω–æ–π!

–û—Ç–∫—Ä–æ–π —è–∑—ã–∫ —á–∏—Å–µ–ª! üîÆ
"""
        }
        
        full_text = f"{content['title']}{content['message']}"
        
        from utils.keyboards import get_reaction_keyboard
        import uuid
        post_id = str(uuid.uuid4())[:8]
        
        reaction_keyboard = get_reaction_keyboard(post_id)
        back_button = [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —ç–∑–æ—Ç–µ—Ä–∏–∫–µ", callback_data='category_esoteric')]]
        
        keyboard = reaction_keyboard + back_button
        
        await query.edit_message_text(
            full_text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode='Markdown'
        )
    
    elif selection == "tarot":
        content = {
            "title": "üÉè –ö–ê–†–¢–´ –¢–ê–†–û",
            "message": """

–¢–∞—Ä–æ - –¥—Ä–µ–≤–Ω–∏–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–∑–Ω–∞–Ω–∏—è —Å–µ–±—è –∏ —Å–≤–æ–µ–≥–æ –ø—É—Ç–∏! üîÆ

üÉè **–ú—É–¥—Ä–æ—Å—Ç—å –¢–∞—Ä–æ:**

üåü **–°—Ç–∞—Ä—à–∏–µ –ê—Ä–∫–∞–Ω—ã** - –≤–∞–∂–Ω—ã–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–µ —É—Ä–æ–∫–∏
‚öîÔ∏è **–ú–µ—á–∏** - –º—ã—Å–ª–∏, —Ä–µ—à–µ–Ω–∏—è, –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã  
üèÜ **–ñ–µ–∑–ª—ã** - —ç–Ω–µ—Ä–≥–∏—è, —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ, —Å—Ç—Ä–∞—Å—Ç—å
üíß **–ö—É–±–∫–∏** - —ç–º–æ—Ü–∏–∏, –ª—é–±–æ–≤—å, –æ—Ç–Ω–æ—à–µ–Ω–∏—è
üí∞ **–ü–µ–Ω—Ç–∞–∫–ª–∏** - –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–π –º–∏—Ä, –∑–¥–æ—Ä–æ–≤—å–µ

‚ú® **–°–æ–≤–µ—Ç –¥–Ω—è:** –î–æ–≤–µ—Ä—å—Å—è —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏ - –æ–Ω–∞ –∑–Ω–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Ç–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã!

–ü–æ–∑–≤–æ–ª—å –∫–∞—Ä—Ç–∞–º –æ—Ç–∫—Ä—ã—Ç—å —Ç–µ–±–µ –ø—É—Ç—å! üåô
"""
        }
        
        full_text = f"{content['title']}{content['message']}"
        
        from utils.keyboards import get_reaction_keyboard
        import uuid
        post_id = str(uuid.uuid4())[:8]
        
        reaction_keyboard = get_reaction_keyboard(post_id)
        back_button = [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —ç–∑–æ—Ç–µ—Ä–∏–∫–µ", callback_data='category_esoteric')]]
        
        keyboard = reaction_keyboard + back_button
        
        await query.edit_message_text(
            full_text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode='Markdown'
        )
    
    else:
        await query.answer("üîÆ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è!")

async def handle_development_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –≤ —Ä–∞–∑–¥–µ–ª–µ —Ä–∞–∑–≤–∏—Ç–∏—è"""
    from telegram import InlineKeyboardMarkup, InlineKeyboardButton
    query = update.callback_query
    if not query or not query.data:
        return
    
    selection = query.data.replace("development_", "")
    
    content_map = {
        "thinking": {
            "title": "üß† –†–ê–ó–í–ò–¢–ò–ï –ú–´–®–õ–ï–ù–ò–Ø",
            "message": """

–¢–≤–æ–π –º–æ–∑–≥ - —ç—Ç–æ –º—ã—à—Ü–∞, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å! üí™

üéØ **–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –¥–ª—è —É–º–∞:**

üß© –†–µ—à–∞–π –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∏ –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏
üìö –ß–∏—Ç–∞–π –∫–Ω–∏–≥–∏ —Ä–∞–∑–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤
üé≤ –ò–≥—Ä–∞–π –≤ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –∏–≥—Ä—ã
ü§î –ó–∞–¥–∞–≤–∞–π —Å–µ–±–µ –≤–æ–ø—Ä–æ—Å—ã "–ü–æ—á–µ–º—É?" –∏ "–ö–∞–∫?"

üí° **–°–æ–≤–µ—Ç –¥–Ω—è:** –ò–∑—É—á–∏ —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ —Å–µ–≥–æ–¥–Ω—è - –¥–∞–∂–µ 15 –º–∏–Ω—É—Ç –∏–º–µ—é—Ç –∑–Ω–∞—á–µ–Ω–∏–µ!

–†–∞–∑–≤–∏–≤–∞–π —Å–≤–æ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å! üåü
"""
        },
        "learning": {
            "title": "üìö –û–ë–£–ß–ï–ù–ò–ï –ò –ó–ù–ê–ù–ò–Ø",
            "message": """

–ó–Ω–∞–Ω–∏—è - —ç—Ç–æ —Å–∏–ª–∞, –∫–æ—Ç–æ—Ä—É—é –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–æ–∂–µ—Ç –æ—Ç–Ω—è—Ç—å! üéì

üìñ **–°–ø–æ—Å–æ–±—ã –æ–±—É—á–µ–Ω–∏—è:**

üé• –°–º–æ—Ç—Ä–∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –≤–∏–¥–µ–æ
üì± –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤
üë• –û–±—â–∞–π—Å—è —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ –≤ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Ç–µ–±–µ –æ–±–ª–∞—Å—Ç—è—Ö
‚úçÔ∏è –í–µ–¥–∏ –¥–Ω–µ–≤–Ω–∏–∫ –Ω–æ–≤—ã—Ö –∑–Ω–∞–Ω–∏–π

üåü **–ü–æ–º–Ω–∏:** –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –±–µ–∑ –æ–±—É—á–µ–Ω–∏—è - –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã–π –¥–µ–Ω—å!

–ò–Ω–≤–µ—Å—Ç–∏—Ä—É–π –≤ —Å–≤–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ! üíé
"""
        },
        "creativity": {
            "title": "ÔøΩ –¢–í–û–†–ß–ï–°–ö–û–ï –†–ê–ó–í–ò–¢–ò–ï",
            "message": """

–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ - —ç—Ç–æ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤–∏–¥–µ—Ç—å –º–∏—Ä –ø–æ-–Ω–æ–≤–æ–º—É! ‚ú®

üé≠ **–†–∞–∑–≤–∏–≤–∞–µ–º –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å:**

üñåÔ∏è –†–∏—Å—É–π, –ª–µ–ø–∏, —Å–æ–∑–¥–∞–≤–∞–π —Å–≤–æ–∏–º–∏ —Ä—É–∫–∞–º–∏
üìù –ü–∏—à–∏ —Å—Ç–∏—Ö–∏, —Ä–∞—Å—Å–∫–∞–∑—ã, –≤–µ–¥–∏—Ç–µ –±–ª–æ–≥
üéµ –°–ª—É—à–∞–π –Ω–æ–≤—É—é –º—É–∑—ã–∫—É, –∏–≥—Ä–∞–π –Ω–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö
üåà –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π —Å —Ü–≤–µ—Ç–∞–º–∏ –∏ —Ñ–æ—Ä–º–∞–º–∏

üí´ **–°–µ–∫—Ä–µ—Ç:** –ù–µ –±–æ–π—Å—è –æ—à–∏–±–æ–∫ - –æ–Ω–∏ —á–∞—Å—Ç—å —Ç–≤–æ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞!

–†–∞—Å–∫—Ä–æ–π —Å–≤–æ–π —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª! ü¶ã
"""
        },
        "career": {
            "title": "üíº –ö–ê–†–¨–ï–†–ê –ò –ë–ò–ó–ù–ï–°",
            "message": """

–£—Å–ø–µ—Ö –≤ –∫–∞—Ä—å–µ—Ä–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è! üöÄ

üíº **–ö–ª—é—á–∏ –∫ —É—Å–ø–µ—Ö—É:**

üéØ –°—Ç–∞–≤—å —á–µ—Ç–∫–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ü–µ–ª–∏
üìà –†–∞–∑–≤–∏–≤–∞–π –Ω–∞–≤—ã–∫–∏, –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ —Ä—ã–Ω–∫–µ
ü§ù –°—Ç—Ä–æ–π –ø–æ–ª–µ–∑–Ω—ã–µ —Å–≤—è–∑–∏ –∏ –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥
üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∏ –æ—à–∏–±–∫–∏

üí° **–ü—Ä–∞–≤–∏–ª–æ:** –¢–≤–æ—è –∑–∞—Ä–ø–ª–∞—Ç–∞ = —Ü–µ–Ω–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –ø—Ä–∏–Ω–æ—Å–∏—à—å!

–°—Ç—Ä–æ–π –∫–∞—Ä—å–µ—Ä—É –º–µ—á—Ç—ã! üëë
"""
        }
    }
    
    if selection in content_map:
        content = content_map[selection]
        full_text = f"{content['title']}{content['message']}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–∞–∫—Ü–∏–π
        from utils.keyboards import get_reaction_keyboard
        import uuid
        post_id = str(uuid.uuid4())[:8]
        
        reaction_keyboard = get_reaction_keyboard(post_id)
        back_button = [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ä–∞–∑–≤–∏—Ç–∏—é", callback_data='category_development')]]
        
        keyboard = reaction_keyboard + back_button
        
        await query.edit_message_text(
            full_text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode='Markdown'
        )
    else:
        await query.answer("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è")

async def handle_health_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –≤ —Ä–∞–∑–¥–µ–ª–µ –∑–¥–æ—Ä–æ–≤—å—è"""
    from telegram import InlineKeyboardMarkup, InlineKeyboardButton
    query = update.callback_query
    if not query or not query.data:
        return
    
    selection = query.data.replace("health_", "")
    
    content_map = {
        "fitness": {
            "title": "üèÉ‚Äç‚ôÇÔ∏è –§–ò–ó–ò–ß–ï–°–ö–ê–Ø –ê–ö–¢–ò–í–ù–û–°–¢–¨",
            "message": """

–î–≤–∏–∂–µ–Ω–∏–µ - —ç—Ç–æ –∂–∏–∑–Ω—å! –¢–≤–æ–µ —Ç–µ–ª–æ –±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç —Ç–µ–±—è –∑–∞ –∫–∞–∂–¥—ã–π —à–∞–≥! üí™

üèãÔ∏è **–ü—Ä–æ—Å—Ç—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è:**

üö∂‚Äç‚ôÄÔ∏è –•–æ–¥–∏ –ø–µ—à–∫–æ–º –º–∏–Ω–∏–º—É–º 10 000 —à–∞–≥–æ–≤ –≤ –¥–µ–Ω—å
üíÉ –¢–∞–Ω—Ü—É–π –ø–æ–¥ –ª—é–±–∏–º—É—é –º—É–∑—ã–∫—É 15 –º–∏–Ω—É—Ç
üßò‚Äç‚ôÄÔ∏è –î–µ–ª–∞–π —É—Ç—Ä–µ–Ω–Ω—é—é –∑–∞—Ä—è–¥–∫—É –∏–ª–∏ –π–æ–≥—É
üèä‚Äç‚ôÄÔ∏è –ü–ª–∞–≤–∞–π –∏–ª–∏ –∑–∞–Ω–∏–º–∞–π—Å—è –ª—é–±–∏–º—ã–º —Å–ø–æ—Ä—Ç–æ–º

‚ö° **–≠–Ω–µ—Ä–≥–∏—è:** –§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–∞–µ—Ç –±–æ–ª—å—à–µ —ç–Ω–µ—Ä–≥–∏–∏, —á–µ–º –æ—Ç–Ω–∏–º–∞–µ—Ç!

–ü–æ–∑–∞–±–æ—Ç—å—Å—è –æ —Å–≤–æ–µ–º —Ç–µ–ª–µ —Å–µ–≥–æ–¥–Ω—è! üåü
"""
        },
        "mental": {
            "title": "üßò‚Äç‚ôÄÔ∏è –ú–ï–ù–¢–ê–õ–¨–ù–û–ï –ó–î–û–†–û–í–¨–ï",
            "message": """

–¢–≤–æ–µ –¥—É—à–µ–≤–Ω–æ–µ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ - –æ—Å–Ω–æ–≤–∞ —Å—á–∞—Å—Ç–ª–∏–≤–æ–π –∂–∏–∑–Ω–∏! üïäÔ∏è

üß† **–¢–µ—Ö–Ω–∏–∫–∏ –¥–ª—è –º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è:**

üßò –ú–µ–¥–∏—Ç–∏—Ä—É–π 10-15 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å
üìù –í–µ–¥–∏ –¥–Ω–µ–≤–Ω–∏–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
üå∏ –ü—Ä–æ–≤–æ–¥–∏ –≤—Ä–µ–º—è –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ
üíö –û–∫—Ä—É–∂–∞–π —Å–µ–±—è –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º–∏ –ª—é–¥—å–º–∏

üí° **–ü–æ–º–Ω–∏:** –ü—Ä–æ—Å–∏—Ç—å –ø–æ–º–æ—â–∏ - —ç—Ç–æ –ø—Ä–∏–∑–Ω–∞–∫ —Å–∏–ª—ã, –∞ –Ω–µ —Å–ª–∞–±–æ—Å—Ç–∏!

–ë–µ—Ä–µ–≥–∏ —Å–≤–æ—é –¥—É—à—É! ‚ú®
"""
        },
        "nutrition": {
            "title": "ü•ó –ü–ò–¢–ê–ù–ò–ï –ò –î–ò–ï–¢–ê",
            "message": """

–¢—ã - —Ç–æ, —á—Ç–æ —Ç—ã –µ—à—å! –ü–∏—Ç–∞–Ω–∏–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–≤–æ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ –∏ —ç–Ω–µ—Ä–≥–∏—é! üå±

üçé **–ü—Ä–∏–Ω—Ü–∏–ø—ã –∑–¥–æ—Ä–æ–≤–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è:**

üíß –ü–µ–π –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–¥—ã (1.5-2 –ª–∏—Ç—Ä–∞ –≤ –¥–µ–Ω—å)
ü•¨ –ï—à—å –±–æ–ª—å—à–µ –æ–≤–æ—â–µ–π –∏ —Ñ—Ä—É–∫—Ç–æ–≤
üçö –í—ã–±–∏—Ä–∞–π —Ü–µ–ª—å–Ω–æ–∑–µ—Ä–Ω–æ–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
üêü –í–∫–ª—é—á–∞–π –±–µ–ª–æ–∫ –≤ –∫–∞–∂–¥—ã–π –ø—Ä–∏–µ–º –ø–∏—â–∏

üåü **–°–µ–∫—Ä–µ—Ç:** –ú–∞–ª–µ–Ω—å–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞—é—Ç –±–æ–ª—å—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã!

–ù–∞–ø–æ–ª–Ω–∏ —Ç–µ–ª–æ —ç–Ω–µ—Ä–≥–∏–µ–π! üîã
"""
        },
        "sleep": {
            "title": "üò¥ –°–û–ù –ò –û–¢–î–´–•",
            "message": """

–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–æ–Ω - –æ—Å–Ω–æ–≤–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –∑–¥–æ—Ä–æ–≤—å—è! üí§

üåô **–°–µ–∫—Ä–µ—Ç—ã –∑–¥–æ—Ä–æ–≤–æ–≥–æ —Å–Ω–∞:**

‚è∞ –õ–æ–∂–∏—Å—å —Å–ø–∞—Ç—å –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –≤—Ä–µ–º—è
üì± –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –≥–∞–¥–∂–µ—Ç—ã –∑–∞ —á–∞—Å –¥–æ —Å–Ω–∞
üå°Ô∏è –°–ø–∏ –≤ –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ–π –∏ —Ç–µ–º–Ω–æ–π –∫–æ–º–Ω–∞—Ç–µ
üìñ –ß–∏—Ç–∞–π –ø–µ—Ä–µ–¥ —Å–Ω–æ–º –∏–ª–∏ —Å–ª—É—à–∞–π —Å–ø–æ–∫–æ–π–Ω—É—é –º—É–∑—ã–∫—É

‚ú® **–§–∞–∫—Ç:** –í–æ –≤—Ä–µ–º—è —Å–Ω–∞ –º–æ–∑–≥ "—É–±–∏—Ä–∞–µ—Ç—Å—è" –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è!

–ü–æ–¥–∞—Ä–∏ —Å–µ–±–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–¥—ã—Ö! üåü
"""
        }
    }
    
    if selection in content_map:
        content = content_map[selection]
        full_text = f"{content['title']}{content['message']}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–∞–∫—Ü–∏–π
        from utils.keyboards import get_reaction_keyboard
        import uuid
        post_id = str(uuid.uuid4())[:8]
        
        reaction_keyboard = get_reaction_keyboard(post_id)
        back_button = [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∑–¥–æ—Ä–æ–≤—å—é", callback_data='category_health')]]
        
        keyboard = reaction_keyboard + back_button
        
        await query.edit_message_text(
            full_text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode='Markdown'
        )
    else:
        await query.answer("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è")

async def handle_relationships_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –≤ —Ä–∞–∑–¥–µ–ª–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–π"""
    from telegram import InlineKeyboardMarkup, InlineKeyboardButton
    query = update.callback_query
    if not query or not query.data:
        return
    
    selection = query.data.replace("relationships_", "")
    
    content_map = {
        "love": {
            "title": "üíï –õ–Æ–ë–û–í–¨ –ò –†–û–ú–ê–ù–¢–ò–ö–ê",
            "message": """

–õ—é–±–æ–≤—å - —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ —á—É–≤—Å—Ç–≤–æ, –Ω–æ –∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –≤—ã–±–æ—Ä! üíù

üíû **–°–µ–∫—Ä–µ—Ç—ã –∫—Ä–µ–ø–∫–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π:**

üí¨ –û–±—â–∞–π—Ç–µ—Å—å –æ—Ç–∫—Ä—ã—Ç–æ –∏ —á–µ—Å—Ç–Ω–æ
üéÅ –î–µ–ª–∞–π—Ç–µ –º–∞–ª–µ–Ω—å–∫–∏–µ –ø—Ä–∏—è—Ç–Ω–æ—Å—Ç–∏ –¥—Ä—É–≥ –¥—Ä—É–≥—É
üëÇ –°–ª—É—à–∞–π—Ç–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –±–µ–∑ –æ—Å—É–∂–¥–µ–Ω–∏—è
üåπ –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–æ —Ä–æ–º–∞–Ω—Ç–∏–∫—É –≤ –±—É–¥–Ω–∏

‚ú® **–ü—Ä–∞–≤–¥–∞:** –õ—É—á—à–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç—Ä–æ—è—Ç—Å—è –Ω–∞ –¥—Ä—É–∂–±–µ –∏ –≤–∑–∞–∏–º–Ω–æ–º —É–≤–∞–∂–µ–Ω–∏–∏!

–¶–µ–Ω–∏ –ª—é–±–æ–≤—å –≤ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏! üíñ
"""
        },
        "family": {
            "title": "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –°–ï–ú–¨–Ø –ò –î–ï–¢–ò",
            "message": """

–°–µ–º—å—è - —ç—Ç–æ —Ç–≤–æ—è –∫—Ä–µ–ø–æ—Å—Ç—å –∏ –∏—Å—Ç–æ—á–Ω–∏–∫ —Å–∏–ª—ã! üè†

üë®‚Äçüë©‚Äçüëß‚Äçüë¶ **–ì–∞—Ä–º–æ–Ω–∏—è –≤ —Å–µ–º—å–µ:**

üï∞Ô∏è –ü—Ä–æ–≤–æ–¥–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –≤–º–µ—Å—Ç–µ
üìû –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —Å–≤—è–∑—å —Å —Ä–æ–¥–Ω—ã–º–∏
üéØ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–µ–º–µ–π–Ω—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏ –∏ —Ä–∏—Ç—É–∞–ª—ã
üíï –í—ã—Ä–∞–∂–∞–π—Ç–µ –ª—é–±–æ–≤—å —Å–ª–æ–≤–∞–º–∏ –∏ –ø–æ—Å—Ç—É–ø–∫–∞–º–∏

üåü **–ú—É–¥—Ä–æ—Å—Ç—å:** –î–µ—Ç–∏ —É—á–∞—Ç—Å—è –±–æ–ª—å—à–µ –æ—Ç —Ç–æ–≥–æ, —á—Ç–æ –≤–∏–¥—è—Ç, —á–µ–º –æ—Ç —Ç–æ–≥–æ, —á—Ç–æ —Å–ª—ã—à–∞—Ç!

–ë–µ—Ä–µ–≥–∏ —Å–µ–º–µ–π–Ω—ã–µ —É–∑—ã! üë®‚Äçüë©‚Äçüëß‚Äçüë¶
"""
        },
        "friendship": {
            "title": "üë• –î–†–£–ñ–ë–ê –ò –û–ë–©–ï–ù–ò–ï",
            "message": """

–ù–∞—Å—Ç–æ—è—â–∏–µ –¥—Ä—É–∑—å—è - —ç—Ç–æ —Å–æ–∫—Ä–æ–≤–∏—â–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —Ü–µ–Ω–∏—Ç—å! ÔøΩ

ü§ù **–ö—Ä–µ–ø–∫–∞—è –¥—Ä—É–∂–±–∞:**

üéâ –†–∞–¥—É–π—Ç–µ—Å—å —É—Å–ø–µ—Ö–∞–º –¥—Ä—É–∑–µ–π –∏—Å–∫—Ä–µ–Ω–Ω–µ
ü§ó –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –≤ —Ç—Ä—É–¥–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã
üé≠ –ë—É–¥—å—Ç–µ —Å–æ–±–æ–π –≤ –æ–±—â–µ–Ω–∏–∏
üìÖ –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å–≤—è–∑—å

üí° **–°–µ–∫—Ä–µ—Ç:** –ß—Ç–æ–±—ã –∏–º–µ—Ç—å –¥—Ä—É–≥–∞, –Ω—É–∂–Ω–æ —Å–∞–º–æ–º—É –±—ã—Ç—å –¥—Ä—É–≥–æ–º!

–¶–µ–Ω–∏ –¥—Ä—É–∂–±—É! üåü
"""
        },
        "work": {
            "title": "ü§ù –†–ê–ë–û–ß–ò–ï –û–¢–ù–û–®–ï–ù–ò–Ø",
            "message": """

–•–æ—Ä–æ—à–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –Ω–∞ —Ä–∞–±–æ—Ç–µ –¥–µ–ª–∞—é—Ç –∫–∞—Ä—å–µ—Ä—É —É—Å–ø–µ—à–Ω–µ–µ! üíº

üëî **–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ:**

üéØ –ë—É–¥—å –Ω–∞–¥–µ–∂–Ω—ã–º –∏ –≤—ã–ø–æ–ª–Ω—è–π –æ–±–µ—â–∞–Ω–∏—è
üí¨ –û–±—â–∞–π—Å—è –≤–µ–∂–ª–∏–≤–æ –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ
ü§ù –ü–æ–º–æ–≥–∞–π –∫–æ–ª–ª–µ–≥–∞–º, –∫–æ–≥–¥–∞ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ
üìà –î–µ–ª–∏—Å—å –∑–Ω–∞–Ω–∏—è–º–∏ –∏ –æ–ø—ã—Ç–æ–º

üèÜ **–ü—Ä–∏–Ω—Ü–∏–ø:** –£—Å–ø–µ—Ö –∫–æ–º–∞–Ω–¥—ã = —Ç–≤–æ–π –ª–∏—á–Ω—ã–π —É—Å–ø–µ—Ö!

–°—Ç—Ä–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏! üöÄ
"""
        }
    }
    
    if selection in content_map:
        content = content_map[selection]
        full_text = f"{content['title']}{content['message']}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–∞–∫—Ü–∏–π
        from utils.keyboards import get_reaction_keyboard
        import uuid
        post_id = str(uuid.uuid4())[:8]
        
        reaction_keyboard = get_reaction_keyboard(post_id)
        back_button = [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º", callback_data='category_relationships')]]
        
        keyboard = reaction_keyboard + back_button
        
        await query.edit_message_text(
            full_text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode='Markdown'
        )
    else:
        await query.answer("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è")

async def handle_zodiac_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∑–Ω–∞–∫–∞ –∑–æ–¥–∏–∞–∫–∞"""
    from telegram import InlineKeyboardMarkup, InlineKeyboardButton
    query = update.callback_query
    if not query or not query.data:
        return
    
    sign = query.data.replace("zodiac_", "").title()
    
    horoscope_text = f"""
üîÆ **–ì–û–†–û–°–ö–û–ü –î–õ–Ø {sign.upper()}**

–°–µ–≥–æ–¥–Ω—è –∑–≤–µ–∑–¥—ã –±–ª–∞–≥–æ—Å–∫–ª–æ–Ω–Ω—ã –∫ –≤–∞–º! ‚ú®

üí´ **–û–±—â–∞—è —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞ –¥–Ω—è:** –í—ã—Å–æ–∫–∞—è
üéØ **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:** –î–µ–π—Å—Ç–≤—É–π—Ç–µ —Å–º–µ–ª–æ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ
üíù **–û—Ç–Ω–æ—à–µ–Ω–∏—è:** –í—Ä–µ–º—è –¥–ª—è –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω—ã—Ö —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤  
üíº **–ö–∞—Ä—å–µ—Ä–∞:** –ë–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏–π
üåü **–°–æ–≤–µ—Ç –¥–Ω—è:** –î–æ–≤–µ—Ä—å—Ç–µ—Å—å —Å–≤–æ–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏

–ü—É—Å—Ç—å –¥–µ–Ω—å –ø—Ä–∏–Ω–µ—Å–µ—Ç –≤–∞–º —Ä–∞–¥–æ—Å—Ç—å –∏ —É—Å–ø–µ—Ö! üåà
"""
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–∞–∫—Ü–∏–π –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞
    from utils.keyboards import get_reaction_keyboard
    import uuid
    post_id = str(uuid.uuid4())[:8]
    
    reaction_keyboard = get_reaction_keyboard(post_id)
    back_button = [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∑–Ω–∞–∫–∞", callback_data='esoteric_horoscope')]]
    
    keyboard = reaction_keyboard + back_button
    
    await query.edit_message_text(
        horoscope_text,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode='Markdown'
    )

async def handle_text_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if not update.message or not update.message.text:
        return
    
    text = update.message.text.lower()
    
    # –ü—Ä–æ—Å—Ç—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    if any(word in text for word in ['–ø—Ä–∏–≤–µ—Ç', 'hello', 'hi']):
        await update.message.reply_text("üåü –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
    elif any(word in text for word in ['—Å–ø–∞—Å–∏–±–æ', '–±–ª–∞–≥–æ–¥–∞—Ä—é', 'thanks']):
        await update.message.reply_text("üí´ –í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!")
    elif any(word in text for word in ['–≥–æ—Ä–æ—Å–∫–æ–ø', '–∞—Å—Ç—Ä–æ–ª–æ–≥–∏—è']):
        await update.message.reply_text("üîÆ –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–º–∏ –≥–æ—Ä–æ—Å–∫–æ–ø–∞–º–∏ –≤ –∫–∞–Ω–∞–ª–µ!")

async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
    """–ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {context.error}")
    
    if isinstance(update, Update) and update.effective_message:
        try:
            await update.effective_message.reply_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
        except:
            pass

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    try:
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        validate_config()
        logger.info("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
        
        if not BOT_TOKEN:
            raise ValueError("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —Ç–∞–π–º–∞—É—Ç–∞–º–∏ –¥–ª—è Railway
        application = (
            Application.builder()
            .token(BOT_TOKEN)
            .connect_timeout(CONNECT_TIMEOUT)
            .read_timeout(READ_TIMEOUT)
            .write_timeout(WRITE_TIMEOUT)
            .pool_timeout(POOL_TIMEOUT)
            .build()
        )
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
        application.add_handler(CommandHandler("start", start_command))
        application.add_handler(CommandHandler("help", help_command))
        application.add_handler(CommandHandler("admin", handle_admin_command))
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
        application.add_handler(CallbackQueryHandler(handle_callback_query))
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text_message))
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ—à–∏–±–æ–∫
        application.add_error_handler(error_handler)
        
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        application.run_polling(drop_pending_updates=True)
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        raise

if __name__ == '__main__':
    main()
