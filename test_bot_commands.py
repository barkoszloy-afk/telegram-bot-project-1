#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –ø—Ä—è–º—É—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π
"""

import asyncio
import time
import pytest
from telegram import Bot
from config import BOT_TOKEN, ADMIN_ID

@pytest.mark.asyncio
async def test_bot_commands():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –ø—Ä—è–º—É—é –æ—Ç–ø—Ä–∞–≤–∫—É"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
    if not BOT_TOKEN:
        pytest.skip("BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        
    bot = Bot(token=BOT_TOKEN)
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ú–ê–ù–î –ë–û–¢–ê")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    me = await bot.get_me()
    print(f"ü§ñ –ë–æ—Ç: @{me.username} ({me.first_name})")
    print(f"üÜî ID: {me.id}")
    
    assert me.username is not None, "–ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç username"
    assert me.id is not None, "–ë–æ—Ç –Ω–µ –∏–º–µ–µ—Ç ID"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
    webhook_info = await bot.get_webhook_info()
    print(f"üåê Webhook: {webhook_info.url}")
    print(f"üì® Pending updates: {webhook_info.pending_update_count}")
    
    assert webhook_info is not None, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
    test_commands = [
        "/start",
        "/help", 
        "/test",
        "/ping",
        "/status"
    ]
    
    print(f"\nüìã –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω—É {ADMIN_ID}:")
    
    successful_commands = 0
    for cmd in test_commands:
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
            message = await bot.send_message(
                chat_id=ADMIN_ID,
                text=f"üß™ –¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã: {cmd}"
            )
            print(f"‚úÖ {cmd} - –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ (ID: {message.message_id})")
            successful_commands += 1
            
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–∞–º–∏
            await asyncio.sleep(1)
            
        except Exception as e:
            print(f"‚ùå {cmd} - –æ—à–∏–±–∫–∞: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ö–æ—Ç—è –±—ã –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã
    assert successful_commands >= 1, f"–ù–∏ –æ–¥–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑ {len(test_commands)}"
    
    print(f"\nüì¢ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:")
    print(f"1. –û—Ç–∫—Ä–æ–π—Ç–µ Telegram –∏ –Ω–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ @{me.username}")
    print(f"2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start")
    print(f"3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –æ—Ç–≤–µ—á–∞–µ—Ç –ª–∏ –±–æ—Ç")
    print(f"4. –ï—Å–ª–∏ –±–æ—Ç –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Railway")

if __name__ == "__main__":
    asyncio.run(test_bot_commands())
