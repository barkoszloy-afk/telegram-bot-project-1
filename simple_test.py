# simple_test.py - –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
import logging
from config import validate_config, ZODIAC_SIGNS, REACTION_EMOJIS
from utils.database import reactions_db
from utils.keyboards import get_zodiac_keyboard, get_reaction_keyboard

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_basic_functionality():
    """–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞"""
    try:
        logger.info("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞...")
        
        # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        logger.info("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        validate_config()
        assert len(ZODIAC_SIGNS) > 0, "–ó–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        assert len(REACTION_EMOJIS) > 0, "–†–µ–∞–∫—Ü–∏–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        logger.info("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: OK")
        
        # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        logger.info("üíæ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        data = reactions_db.data
        assert isinstance(data, dict), "–î–∞–Ω–Ω—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è —Å–ª–æ–≤–∞—Ä–µ–º"
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π —Ä–µ–∞–∫—Ü–∏–∏
        result = reactions_db.add_user_reaction("test_123", "heart", "post_456")
        logger.info(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–∏: {result}")
        logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: OK")
        
        # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä
        logger.info("‚å®Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä...")
        zodiac_kb = get_zodiac_keyboard()
        assert len(zodiac_kb) > 0, "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–æ–¥–∏–∞–∫–∞ –ø—É—Å—Ç–∞—è"
        
        reaction_kb = get_reaction_keyboard("test_post")
        assert len(reaction_kb) > 0, "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–µ–∞–∫—Ü–∏–π –ø—É—Å—Ç–∞—è"
        logger.info("‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã: OK")
        
        # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
        logger.info("üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...")
        from handlers.admin import handle_admin_command
        from handlers.reactions import handle_reaction_callback
        logger.info("‚úÖ –ò–º–ø–æ—Ä—Ç—ã: OK")
        
        logger.info("\nüéâ –í–°–ï –û–°–ù–û–í–ù–´–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        logger.info("üöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!")
        return True
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    success = test_basic_functionality()
    if success:
        print("\n" + "="*50)
        print("‚úÖ –£–°–ü–ï–®–ù–û: –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç!")
        print("üöÄ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞: python main_bot.py")
        print("="*50)
    else:
        print("\n" + "="*50)
        print("‚ùå –û–®–ò–ë–ö–ê: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–¥–µ")
        print("üîß –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º")
        print("="*50)
