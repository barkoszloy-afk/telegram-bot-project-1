#!/usr/bin/env python3
"""
üöÄ –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –∞–≤—Ç–æ–¥–µ–ø–ª–æ–π - –∫–∞–∫ –±—ã–ª–æ —Ä–∞–Ω—å—à–µ!
–ë–µ–∑ –≤—Å—è–∫–∏—Ö —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π, –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
"""

import os
import subprocess
import sys
import json
import time
from datetime import datetime

def print_step(msg):
    print(f"üîµ {msg}")

def print_success(msg):
    print(f"‚úÖ {msg}")

def print_error(msg):
    print(f"‚ùå {msg}")

def run_cmd(cmd, silent=False):
    """–ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã"""
    if not silent:
        print(f"üìù {cmd}")
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        if not silent and result.stdout:
            print(result.stdout.strip())
        return result.returncode == 0, result.stdout, result.stderr
    except Exception as e:
        return False, "", str(e)

def instant_deploy():
    print("üöÄ –ú–ì–ù–û–í–ï–ù–ù–´–ô –ê–í–¢–û–î–ï–ü–õ–û–ô")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–∞–ø–∫–µ
    if not os.path.exists("main_bot_railway.py"):
        print_error("–§–∞–π–ª main_bot_railway.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    print_step("–ö–æ–º–º–∏—Ç–∏–º –∏ –ø—É—à–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
    run_cmd("git add .", silent=True)
    
    # –ö–æ–º–º–∏—Ç–∏–º —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    run_cmd(f'git commit -m "üöÄ Auto deploy {timestamp}"', silent=True)
    
    # –ü—É—à–∏–º
    success, out, err = run_cmd("git push origin main", silent=True)
    if success:
        print_success("–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ GitHub!")
    else:
        print_error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ GitHub")
    
    print_step("–°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    # –°–æ–∑–¥–∞–µ–º .env.example –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if not os.path.exists(".env.example"):
        with open(".env.example", "w") as f:
            f.write("""# –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤ .env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ
BOT_TOKEN=your_bot_token_here
ADMIN_ID=your_telegram_id_here
CHANNEL_ID=your_channel_id_here
PORT=8000
""")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π Dockerfile
    with open("Dockerfile", "w") as f:
        f.write("""FROM python:3.11-slim
WORKDIR /app
COPY requirements.txt .
RUN pip install -r requirements.txt
COPY . .
EXPOSE 8000
CMD ["python", "main_bot_railway.py"]
""")
    
    # –°–æ–∑–¥–∞–µ–º docker-compose.yml
    with open("docker-compose.yml", "w") as f:
        f.write("""version: '3.8'
services:
  bot:
    build: .
    ports:
      - "8000:8000"
    env_file: .env
    restart: unless-stopped
""")
    
    print_success("–§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã!")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
    docker_ok, _, _ = run_cmd("docker --version", silent=True)
    
    if docker_ok:
        print_step("üê≥ Docker –Ω–∞–π–¥–µ–Ω! –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
        if not os.path.exists(".env"):
            print("üìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏:")
            print("BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–æ—Ç_BotFather")
            print("ADMIN_ID=–≤–∞—à_telegram_id")
            print("CHANNEL_ID=id_–∫–∞–Ω–∞–ª–∞")
            print("PORT=8000")
            print()
            
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä .env
            with open(".env", "w") as f:
                f.write("BOT_TOKEN=–ó–ê–ú–ï–ù–ò–¢–ï_–ù–ê_–í–ê–®_–¢–û–ö–ï–ù\n")
                f.write("ADMIN_ID=–ó–ê–ú–ï–ù–ò–¢–ï_–ù–ê_–í–ê–®_ID\n")
                f.write("CHANNEL_ID=\n")
                f.write("PORT=8000\n")
            
            print("‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω! –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞")
            return True
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
        run_cmd("docker-compose down", silent=True)
        
        # –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º
        print_step("–°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑...")
        build_ok, _, _ = run_cmd("docker build -t telegram-bot .")
        
        if build_ok:
            print_step("–ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä...")
            up_ok, _, _ = run_cmd("docker-compose up -d")
            
            if up_ok:
                print_success("üéâ –ë–û–¢ –ó–ê–ü–£–©–ï–ù!")
                print()
                print("üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: http://localhost:8000/health")
                print("üìã –õ–æ–≥–∏: docker-compose logs -f")
                print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down")
                return True
            else:
                print_error("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞")
        else:
            print_error("–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–∞")
    
    else:
        print_step("Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∫–∞–∑—ã–≤–∞—é –æ–±–ª–∞—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã...")
    
    print()
    print("‚òÅÔ∏è –û–ë–õ–ê–ß–ù–´–ô –î–ï–ü–õ–û–ô:")
    print("=" * 30)
    print()
    
    print("üü£ HEROKU (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):")
    print("1. –ò–¥–∏—Ç–µ –Ω–∞ https://dashboard.heroku.com/new-app")
    print("2. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")  
    print("3. Deploy ‚Üí GitHub ‚Üí barkoszloy-afk/telegram-bot-project-1")
    print("4. Settings ‚Üí Config Vars ‚Üí –¥–æ–±–∞–≤—å—Ç–µ:")
    print("   BOT_TOKEN, ADMIN_ID, CHANNEL_ID, PORT=8000")
    print("5. Deploy Branch")
    print()
    
    print("üü¶ RAILWAY:")
    print("1. –ò–¥–∏—Ç–µ –Ω–∞ https://railway.app")
    print("2. New Project ‚Üí GitHub ‚Üí telegram-bot-project-1")
    print("3. Settings ‚Üí Environment ‚Üí –¥–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ")
    print("4. –ê–≤—Ç–æ–¥–µ–ø–ª–æ–π!")
    print()
    
    print("üü¢ RENDER:")
    print("1. –ò–¥–∏—Ç–µ –Ω–∞ https://render.com")
    print("2. New ‚Üí Web Service ‚Üí GitHub")
    print("3. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
    print("4. Environment ‚Üí –¥–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ")
    print()
    
    print("üì± –ö–ê–ö –ü–û–õ–£–ß–ò–¢–¨ –î–ê–ù–ù–´–ï:")
    print("BOT_TOKEN: @BotFather ‚Üí /newbot")
    print("ADMIN_ID: @userinfobot")
    print("CHANNEL_ID: –¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∞")
    print()
    
    print_success("üéØ –ì–æ—Ç–æ–≤–æ! –í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –∏ –¥–µ–ø–ª–æ–π—Ç–µ!")
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–º–∏—Ç
    run_cmd("git add .", silent=True)
    run_cmd('git commit -m "üê≥ Add Docker and cloud deployment configs"', silent=True)
    run_cmd("git push origin main", silent=True)
    
    return True

if __name__ == "__main__":
    print("‚ö° –ú–ì–ù–û–í–ï–ù–ù–´–ô –î–ï–ü–õ–û–ô –ë–ï–ó –í–°–Ø–ö–ò–• –°–õ–û–ñ–ù–û–°–¢–ï–ô!")
    print()
    
    success = instant_deploy()
    
    if success:
        print()
        print("üéâ –í–°–Å –ì–û–¢–û–í–û!")
        print("–í–∞—à –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    else:
        print("‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")
        sys.exit(1)
