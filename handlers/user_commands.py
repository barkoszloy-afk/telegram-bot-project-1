# handlers/user_commands.py - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
import logging
from datetime import datetime
from telegram import Update
from telegram.ext import ContextTypes

logger = logging.getLogger(__name__)

async def about_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /about - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"""
    try:
        about_text = (
            f"ü§ñ **–û –±–æ—Ç–µ**\n\n"
            f"**–ù–∞–∑–≤–∞–Ω–∏–µ:** Telegram Bot Project\n"
            f"**–í–µ—Ä—Å–∏—è:** 1.0.0\n"
            f"**–°–æ–∑–¥–∞–Ω:** 2025\n"
            f"**–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:** Railway\n\n"
            f"üìã **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n"
            f"‚Ä¢ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏\n"
            f"‚Ä¢ –°–∏—Å—Ç–µ–º–∞ —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ –ø–æ—Å—Ç—ã\n"
            f"‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã\n"
            f"‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\n"
            f"‚Ä¢ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã\n\n"
            f"üîß **–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:**\n"
            f"‚Ä¢ Python 3.11+\n"
            f"‚Ä¢ python-telegram-bot\n"
            f"‚Ä¢ Railway Cloud\n"
            f"‚Ä¢ Webhook –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞\n\n"
            f"üìû **–ü–æ–¥–¥–µ—Ä–∂–∫–∞:**\n"
            f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏\n"
            f"–∏–ª–∏ /feedback –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏"
        )
        
        if update.message:
            await update.message.reply_text(about_text, parse_mode='Markdown')
        
        logger.info(f"‚ÑπÔ∏è –û –±–æ—Ç–µ –∑–∞–ø—Ä–æ—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {update.effective_user.id if update.effective_user else 'Unknown'}")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /about: {e}")
        if update.message:
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ")

async def profile_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /profile - –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        user = update.effective_user
        if not user:
            return
            
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_id = user.id
        username = user.username or "–ù–µ —É–∫–∞–∑–∞–Ω"
        first_name = user.first_name or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        last_name = user.last_name or ""
        language_code = user.language_code or "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        try:
            from handlers.stats import bot_stats
            user_stats = bot_stats.stats["users"].get(str(user_id), {})
            
            first_seen = user_stats.get("first_seen", "–ù–µ –∏–∑–≤–µ—Å—Ç–Ω–æ")
            last_seen = user_stats.get("last_seen", "–ù–µ –∏–∑–≤–µ—Å—Ç–Ω–æ")
            message_count = user_stats.get("message_count", 0)
            commands_used = user_stats.get("commands_used", {})
            
            # –°–∞–º–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –∫–æ–º–∞–Ω–¥–∞
            if commands_used:
                favorite_command = max(commands_used.items(), key=lambda x: x[1])
                favorite_cmd_text = f"/{favorite_command[0]} ({favorite_command[1]} —Ä–∞–∑)"
            else:
                favorite_cmd_text = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
            
        except Exception:
            first_seen = "–ù–µ –∏–∑–≤–µ—Å—Ç–Ω–æ"
            last_seen = "–ù–µ –∏–∑–≤–µ—Å—Ç–Ω–æ"
            message_count = 0
            favorite_cmd_text = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
        
        profile_text = (
            f"üë§ **–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å**\n\n"
            f"**–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**\n"
            f"‚Ä¢ ID: `{user_id}`\n"
            f"‚Ä¢ –ò–º—è: {first_name} {last_name}".strip() + "\n"
            f"‚Ä¢ Username: {username if username != '–ù–µ —É–∫–∞–∑–∞–Ω' else '–ù–µ —É–∫–∞–∑–∞–Ω'}\n"
            f"‚Ä¢ –Ø–∑—ã–∫: {language_code}\n\n"
            f"**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**\n"
            f"‚Ä¢ –ü–µ—Ä–≤–æ–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ: {first_seen}\n"
            f"‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {last_seen}\n"
            f"‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {message_count}\n"
            f"‚Ä¢ –õ—é–±–∏–º–∞—è –∫–æ–º–∞–Ω–¥–∞: {favorite_cmd_text}\n\n"
            f"üïê **–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è:** {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}"
        )
        
        if update.message:
            await update.message.reply_text(profile_text, parse_mode='Markdown')
        
        logger.info(f"üë§ –ü—Ä–æ—Ñ–∏–ª—å –∑–∞–ø—Ä–æ—à–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /profile: {e}")
        if update.message:
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è")

async def feedback_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /feedback - –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"""
    try:
        feedback_text = (
            f"üìù **–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å**\n\n"
            f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ —É–ª—É—á—à–µ–Ω–∏—é –±–æ—Ç–∞!\n\n"
            f"**–ö–∞–∫ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤:**\n"
            f"1. –û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ\n"
            f"2. –£–∫–∞–∂–∏—Ç–µ, –≤ –∫–∞–∫–æ–π –∫–æ–º–∞–Ω–¥–µ –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞\n"
            f"3. –ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã –æ–∂–∏–¥–∞–ª–∏ —É–≤–∏–¥–µ—Ç—å\n\n"
            f"**–ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏:**\n"
            f"‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ issue –≤ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏\n"
            f"‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –±–æ—Ç–∞\n"
            f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏\n\n"
            f"**–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã:**\n"
            f"‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥\n"
            f"‚Ä¢ –£–ª—É—á—à–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n"
            f"‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫\n"
            f"‚Ä¢ –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏\n\n"
            f"–í–∞—à–∏ –æ—Ç–∑—ã–≤—ã –ø–æ–º–æ–≥–∞—é—Ç –¥–µ–ª–∞—Ç—å –±–æ—Ç–∞ –ª—É—á—à–µ! üöÄ"
        )
        
        if update.message:
            await update.message.reply_text(feedback_text, parse_mode='Markdown')
        
        logger.info(f"üìù –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –∑–∞–ø—Ä–æ—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {update.effective_user.id if update.effective_user else 'Unknown'}")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /feedback: {e}")
        if update.message:
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏")

async def settings_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        user = update.effective_user
        if not user:
            return
            
        settings_text = (
            f"‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**\n\n"
            f"–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n"
            f"**–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:**\n"
            f"‚Ä¢ –¢–µ–∫—É—â–∏–π: –†—É—Å—Å–∫–∏–π üá∑üá∫\n"
            f"‚Ä¢ –î–æ—Å—Ç—É–ø–Ω—ã–µ: –†—É—Å—Å–∫–∏–π\n\n"
            f"**–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:**\n"
            f"‚Ä¢ –†–µ–∞–∫—Ü–∏–∏ –Ω–∞ –ø–æ—Å—Ç—ã: ‚úÖ –í–∫–ª—é—á–µ–Ω—ã\n"
            f"‚Ä¢ –°–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ‚úÖ –í–∫–ª—é—á–µ–Ω—ã\n\n"
            f"**–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ:**\n"
            f"‚Ä¢ –§–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏: 24-—á–∞—Å–æ–≤–æ–π\n"
            f"‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞: UTC\n\n"
            f"**–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å:**\n"
            f"‚Ä¢ –°–±–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ‚úÖ –í–∫–ª—é—á–µ–Ω\n"
            f"‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–∞–Ω–¥: ‚úÖ –í–∫–ª—é—á–µ–Ω–∞\n\n"
            f"üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±—É–¥—É—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö.\n"
            f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /feedback –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π!"
        )
        
        if update.message:
            await update.message.reply_text(settings_text, parse_mode='Markdown')
        
        logger.info(f"‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø—Ä–æ—à–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.id}")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /settings: {e}")
        if update.message:
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫")
