#!/usr/bin/env python3
"""
–õ–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥ –±–µ–∑ webhook
"""

import asyncio
import sys
import os
import pytest

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/Users/konstantinbaranov/Desktop/eto vse ty/telegram-bot-project-1')

from telegram import Update, User, Chat, Message
from telegram.ext import ContextTypes
from main_bot_railway import start_command, test_command

@pytest.mark.asyncio
async def test_commands_directly():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –Ω–∞–ø—Ä—è–º—É—é –±–µ–∑ webhook"""
    print("üß™ –ü–†–Ø–ú–û–ô –¢–ï–°–¢ –ö–û–ú–ê–ù–î")
    print("=" * 30)
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–∫ –æ–±—ä–µ–∫—Ç—ã
    user = User(
        id=345470935,
        is_bot=False,
        first_name="TestUser",
        username="testuser"
    )
    
    chat = Chat(
        id=345470935,
        type="private",
        first_name="TestUser",
        username="testuser"
    )
    
    message = Message(
        message_id=9999,
        date=None,
        chat=chat,
        from_user=user,
        text="/start"
    )
    
    update = Update(
        update_id=999999,
        message=message
    )
    
    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π context
    context = ContextTypes.DEFAULT_TYPE()
    
    print("üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º start_command...")
    try:
        await start_command(update, context)
        print("‚úÖ start_command –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –±–µ–∑ –æ—à–∏–±–æ–∫")
    except Exception as e:
        print(f"‚ùå start_command –æ—à–∏–±–∫–∞: {e}")
        import traceback
        print(f"üìã Traceback: {traceback.format_exc()}")
        pytest.fail(f"start_command failed: {e}")
    
    print("\nüìã –¢–µ—Å—Ç–∏—Ä—É–µ–º test_command...")
    message.text = "/test"
    try:
        await test_command(update, context)
        print("‚úÖ test_command –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –±–µ–∑ –æ—à–∏–±–æ–∫")
    except Exception as e:
        print(f"‚ùå test_command –æ—à–∏–±–∫–∞: {e}")
        import traceback
        print(f"üìã Traceback: {traceback.format_exc()}")
        pytest.fail(f"test_command failed: {e}")

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑ pytest
def test_command():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–Ω–µ pytest"""
    print("üìã –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞...")
    asyncio.run(test_commands_directly())
